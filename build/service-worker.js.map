{"version":3,"sources":["../webpack/bootstrap","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../node_modules/workbox-core/models/messages/messageGenerator.js","../node_modules/workbox-core/_private/WorkboxError.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/workbox-core/_private/logger.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/workbox-core/_version.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/workbox-core/_private/cacheNames.js","../node_modules/workbox-precaching/_version.js","../node_modules/workbox-core/_private/getFriendlyURL.js","../node_modules/workbox-core/_private/cacheWrapper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/workbox-core/_private/fetchWrapper.js","../node_modules/workbox-routing/_version.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/workbox-strategies/_version.js","../node_modules/workbox-core/_private/dontWaitFor.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/workbox-core/utils/pluginUtils.js","../node_modules/workbox-expiration/_version.js","../node_modules/workbox-core/registerQuotaErrorCallback.js","../node_modules/workbox-core/_private/executeQuotaErrorCallbacks.js","../node_modules/workbox-core/_private/DBWrapper.js","../node_modules/workbox-core/_private/deleteDatabase.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/workbox-core/models/quotaErrorCallbacks.js","../node_modules/workbox-cacheable-response/_version.js","../node_modules/@layer0/core/constants.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js","../node_modules/@layer0/prefetch/constants.js","../node_modules/@layer0/prefetch/sw/log.js","../node_modules/@layer0/prefetch/sw/PrefetchPlugin.js","../node_modules/@layer0/prefetch/sw/prefetch.js","../node_modules/@layer0/prefetch/sw/messageBrowser.js","../node_modules/@layer0/prefetch/sw/index.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/@layer0/prefetch/sw/Prefetcher.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/@layer0/prefetch/sw/DevtoolsPlugin.js","../node_modules/@layer0/prefetch/sw/CustomCacheKeyPlugin.js","../node_modules/@layer0/core/router/CustomCacheKey.js","../node_modules/@layer0/core/router/Groups.js","../node_modules/@layer0/core/router/GroupConfig.js","../node_modules/@layer0/core/node_modules/cookie/index.js","../node_modules/@layer0/prefetch/sw/ChangeMethodPlugin.js","../node_modules/workbox-core/_private/canConstructResponseFromBodyStream.js","../node_modules/workbox-core/copyResponse.js","../node_modules/workbox-precaching/utils/precachePlugins.js","../node_modules/workbox-precaching/utils/createCacheKey.js","../node_modules/workbox-precaching/utils/getOrCreatePrecacheController.js","../node_modules/workbox-precaching/PrecacheController.js","../node_modules/workbox-precaching/utils/removeIgnoredSearchParams.js","../node_modules/workbox-precaching/utils/generateURLVariations.js","../node_modules/workbox-precaching/utils/getCacheKeyForURL.js","../node_modules/workbox-precaching/addRoute.js","../node_modules/workbox-precaching/utils/addFetchListener.js","../node_modules/workbox-precaching/precache.js","../node_modules/workbox-precaching/precacheAndRoute.js","../node_modules/workbox-core/skipWaiting.js","../node_modules/workbox-core/clientsClaim.js","service-worker.js","../node_modules/workbox-routing/utils/getOrCreateDefaultRouter.js","../node_modules/workbox-routing/utils/normalizeHandler.js","../node_modules/workbox-routing/Route.js","../node_modules/workbox-routing/utils/constants.js","../node_modules/workbox-routing/NavigationRoute.js","../node_modules/workbox-routing/RegExpRoute.js","../node_modules/workbox-routing/Router.js","../node_modules/workbox-routing/registerRoute.js","../node_modules/workbox-routing/setCatchHandler.js","../node_modules/workbox-routing/setDefaultHandler.js","../node_modules/workbox-strategies/CacheFirst.js","../node_modules/workbox-strategies/CacheOnly.js","../node_modules/workbox-strategies/plugins/cacheOkAndOpaquePlugin.js","../node_modules/workbox-strategies/NetworkFirst.js","../node_modules/workbox-strategies/NetworkOnly.js","../node_modules/workbox-strategies/StaleWhileRevalidate.js","../node_modules/workbox-expiration/models/CacheTimestampsModel.js","../node_modules/workbox-expiration/CacheExpiration.js","../node_modules/workbox-expiration/ExpirationPlugin.js","../node_modules/workbox-cacheable-response/CacheableResponse.js","../node_modules/workbox-cacheable-response/CacheableResponsePlugin.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","Class","_cache","Map","Function","toString","indexOf","TypeError","has","set","Wrapper","construct","getPrototypeOf","constructor","writable","configurable","setPrototypeOf","messageGenerator","code","msg","length","JSON","stringify","WorkboxError","errorCode","details","message","Error","_createForOfIteratorHelper","allowArrayLike","it","iterator","Array","isArray","F","e","_e","f","normalCompletion","didErr","step","next","_e2","logger","_classCallCheck","instance","Constructor","_","_defineProperties","target","props","descriptor","_createClass","protoProps","staticProps","_cacheNameDetails","googleAnalytics","precache","prefix","runtime","suffix","registration","scope","_createCacheName","cacheName","filter","join","cacheNames","updateDetails","keys","eachCacheNameDetail","getGoogleAnalyticsName","userCacheName","getPrecacheName","getPrefix","getRuntimeName","getSuffix","getFriendlyURL","url","URL","String","location","href","replace","RegExp","origin","_getEffectiveRequest","a","request","plugins","cacheKeyWillBeUsedPlugins","pluginUtils","effectiveRequest","plugin","Request","_isResponseSafeToCache","response","event","responseToCache","pluginsUsed","pluginMethod","status","matchWrapper","matchOptions","caches","open","cache","match","cachedResponse","cacheWrapper","put","updatePlugins","oldResponse","executeQuotaErrorCallbacks","newResponse","_toConsumableArray","arr","arrayLikeToArray","iter","from","unsupportedIterableToArray","fetchWrapper","fetch","fetchOptions","FetchEvent","preloadResponse","possiblePreloadResponse","process","failedFetchPlugins","originalRequest","clone","requestClone","thrownError","pluginFilteredRequest","fetchResponse","dontWaitFor","promise","_unsupportedIterableToArray","minLen","slice","test","_inherits","subClass","superClass","_setPrototypeOf","__proto__","_slicedToArray","_arr","_n","_d","_s","_i","push","_typeof","obj","_possibleConstructorReturn","ReferenceError","_createSuper","Derived","hasNativeReflectConstruct","isNativeReflectConstruct","result","Super","NewTarget","Reflect","_arrayLikeToArray","len","arr2","_getPrototypeOf","callbackName","registerQuotaErrorCallback","callback","quotaErrorCallbacks","add","DBWrapper","version","onupgradeneeded","onversionchange","_db","_name","_version","_onupgradeneeded","_onversionchange","close","openRequestTimedOut","setTimeout","OPEN_TIMEOUT","openRequest","indexedDB","onerror","evt","transaction","abort","onsuccess","db","storeName","query","getAllKeys","count","getAllMatching","includeKeys","entries","map","entry","index","direction","txn","store","objectStore","results","openCursor","cursor","continue","storeNames","type","onabort","oncomplete","method","objStore","methods","IDBObjectStore","_call","readonly","readwrite","deleteDatabase","onblocked","_isNativeReflectConstruct","sham","Proxy","Date","_construct","Parent","Set","LAYER0_CONFIG_FILE","LAYER0_ASSET_ALIASES_FILE","LAYER0_ENV_VARIABLES","config","deploymentType","versionOverride","LAYER0_DEPLOYMENT_TYPE_AWS","LAYER0_HEADERS_PREFIX","LAYER0_MAX_USER_HEADERS_ALLOWED","LAYER0_TOO_MANY_HEADERS_STATUS_CODE","LAYER0_UNCACHED_PREFETCH_STATUS","ACTIONS","setHeader","updateHeader","removeHeader","syntheticRes","updatePath","proxy","addCookie","updateCookie","removeCookie","BACKENDS","js","static","permanentStatic","imageOptimizer","JS_BACKEND_HOSTNAME","HTTP_METHODS","head","post","delete","patch","options","HTTP_HEADERS","authorization","acceptEncoding","cacheControl","contentEncoding","contentLength","contentType","cookie","host","serverTiming","setCookie","userAgent","vary","xForwardedFor","xRequestId","xSwCacheControl","x0Browser","x0CacheControl","x0CachingStatus","x0ClientIp","x0Components","x0Destination","x0Device","x0DeviceIsBot","x0GeoCity","x0GeoCountryCode","x0GeoLatitude","x0GeoLongitude","x0GeoPostalCode","x0MatchedRoutes","x0Protocol","x0Route","x0Status","x0SurrogateKey","x0T","x0UserT","x0Vendor","x0Version","CACHING_STATUS","ok","private","bodyTooBig","noMaxAge","CACHEABLE_METHODS","THROTTLED_QUERY_PARAM","PREFETCH_QUERY_PARAM","DEVTOOLS_PREFETCH_QUERY_PARAM","HEAD_QUERY_PARAM","POST_BODY_QUERY_PARAM","METHOD_QUERY_PARAM","ROUTES_FALLBACK","ROUTES_CATCH_GROUP","LAYER0_IMAGE_OPTIMIZER_PATH","arrayWithoutHoles","iterableToArray","nonIterableSpread","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","source","forEach","getOwnPropertyDescriptors","defineProperties","CACHE_NAME","LAYER0_PREFETCH_CACHE_NAME","BACKEND_REQUESTS_RESPONSE_HEADER_NAME","PREFETCH_HEADER_VALUE","LAYER0_PREFETCH_HEADER_VALUE","default","__importDefault","mod","constants_1","require","constants_2","log_1","prefetch_1","isPrefetchRequest","searchParams","normalizeRequestUrlForCache","cacheHost","hostname","protocol","toLowerCase","text","body","encodeURIComponent","decodeQueryParams","PrefetchPlugin","incrementRead","incrementWrite","prefetchUpstreamRequests","backendRequests","headers","split","prefetch","redirected","maybeDecode","val","decodeURIComponent","param","messageBrowser_1","as","cors","action","broadcast","clients","matchAll","targetClients","client","postMessage","Prefetcher_1","Prefetcher","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","define","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","state","GenStateSuspendedStart","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","GenStateSuspendedYield","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","values","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","invoke","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","resultName","nextLoc","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","mark","awrap","async","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","globalThis","workbox_routing_1","workbox_strategies_1","workbox_expiration_1","workbox_cacheable_response_1","PrefetchPlugin_1","DevtoolsPlugin_1","CustomCacheKeyPlugin_1","ChangeMethodPlugin_1","Stats","hits","misses","devtoolsEnabled","bufferedDevtoolMessages","manifestURL","cacheOrigins","importScripts","cacheableResponsePlugin","CacheableResponsePlugin","statuses","stats","initStats","initDevtoolsHandshakeListener","__LAYER0_CACHE_MANIFEST__","_a","_b","_c","criteriaPath","route","cacheOptions","returnsResponse","pattern","maxAgeSeconds","browser","serviceWorkerSeconds","edgeMaxAgeSeconds","edge","isPartialPathRoute","convertToGet","getRouteConfigsFromManifest","routeConfig","createDevtoolsRoute","createRoute","registerRoute","shouldIntercept","NetworkOnly","createDevtoolsPlugin","addEventListener","data","registerDevtoolsRoutes","sendToAllClients","ackMessage","trimDevtoolsRequestMessageBuffer","clearDevtoolsRequestMessageTimeout","clearTimeout","sliceIndex","sliceMinimumTimestamp","now","timestamp","skipAssets","includes","destination","pathname","onResponse","isEnabledFn","routeMatcher","patternRegexp","toUpperCase","optMethod","prefetchPlugin","ExpirationPlugin","splice","CacheFirst","ignoreVary","ttfb","browserCache","devToolMessage","addDevtoolsRequestMessageToBuffer","DevtoolsPlugin","currentRequests","metadata","normalizedUrl","cleanupTimeout","saveRequestMetadata","requestStart","isPrefetch","getRequestMetadata","CustomCacheKey_1","CustomCacheKeyPlugin","urls","urlMatches","conf","handleKeyConfig","deleteKeys","CUSTOM_CACHE_KEY_ACTIONS","blacklistAll","blacklistSome","names","whitelistSome","removeBody","removeMethod","Groups_1","cookie_1","addValue","CustomCacheKey","actions","newKey","srcRequest","toKeep","createGroups","createGroupedValue","srcValues","groups","matchingGroup","findMatchingGroup","group","addHeader","cookieHeader","parse","cookies","toJSON","GroupConfig_1","Groups","GroupConfig","groupedValue","matchRegex","str","opt","pairs","pairSplitRegExp","dec","decode","pair","eq_idx","substr","trim","tryDecode","serialize","enc","encode","fieldContentRegExp","maxAge","isFinite","Math","floor","domain","path","expires","toUTCString","httpOnly","secure","sameSite","ChangeMethodPlugin","some","testUrl","Headers","redirect","supportStatus","canConstructResponseFromBodyStream","testResponse","Response","copyResponse","modifier","clonedResponse","responseInit","statusText","modifiedResponseInit","blob","precachePlugins","createCacheKey","urlObject","cacheKey","revision","cacheKeyURL","originalURL","precacheController","PrecacheController","_cacheName","_urlsToCacheKeys","_urlsToCacheModes","_cacheKeysToIntegrities","urlsToWarnAbout","cacheMode","firstEntry","secondEntry","integrity","warningMessage","console","warn","toBePrecached","alreadyPrecached","alreadyCachedRequests","existingCacheKeys","precacheRequests","_addURLToCache","all","updatedURLs","item","notUpdatedURLs","currentlyCachedRequests","expectedCacheKeys","deletedURLs","credentials","cacheWillUpdatePlugin","cacheWillUpdate","ignoreSearch","getCacheKeyForURL","fallbackToNetwork","matchPrecache","handler","createHandler","getOrCreatePrecacheController","removeIgnoredSearchParams","ignoreURLParametersMatching","paramName","regExp","generateURLVariations","directoryIndex","cleanURLs","urlManipulation","hash","urlWithoutIgnoredParams","endsWith","directoryURL","cleanURL","additionalURLs","urlToAttempt","urlsToCacheKeys","getURLsToCacheKeys","possibleURL","possibleCacheKey","listenerAdded","addRoute","precachedURL","responsePromise","respondWith","addFetchListener","installListener","waitUntil","install","catch","activateListener","activate","skipWaiting","claim","addToCacheList","__WB_MANIFEST","defaultRouter","normalizeHandler","Route","NavigationRoute","allowlist","denylist","_match","_allowlist","_denylist","pathnameAndSearch","search","RegExpRoute","exec","Router","_routes","handleRequest","payload","requestPromises","urlsToCache","ports","startsWith","findMatchingRoute","params","_defaultHandler","_catchHandler","routes","matchResult","routeIndex","getOrCreateDefaultRouter","addCacheListener","capture","captureUrl","moduleName","funcName","setCatchHandler","setDefaultHandler","_plugins","_fetchOptions","_matchOptions","_getFromNetwork","responseClone","cachePutPromise","CacheOnly","cacheOkAndOpaquePlugin","NetworkFirst","isUsingCacheWillUpdate","_networkTimeoutSeconds","networkTimeoutSeconds","logs","promises","_getTimeoutPromise","id","timeoutId","networkPromise","_getNetworkPromise","race","_respondFromCache","cachePut","StaleWhileRevalidate","fetchAndCachePromise","OBJECT_STORE_NAME","normalizeURL","unNormalizedUrl","CacheTimestampsModel","_handleUpgrade","createObjectStore","keyPath","createIndex","unique","_getId","minTimestamp","maxCount","entriesToDelete","entriesNotDeletedCount","urlsDeleted","CacheExpiration","_isRunning","_rerunRequested","_maxEntries","maxEntries","_maxAgeSeconds","_timestampModel","expireEntries","urlsExpired","setTimestamp","getTimestamp","expireOlderThan","Infinity","cachedResponseWillBeUsed","isFresh","_isResponseDateFresh","cacheExpiration","_getCacheExpiration","updateTimestampDone","updateTimestamp","cacheDidUpdate","_config","_cacheExpirations","purgeOnQuotaError","deleteCacheAndMetadata","dateHeaderTimestamp","_getDateHeaderTimestamp","dateHeader","headerTime","getTime","CacheableResponse","_statuses","_headers","cacheable","headerName","_cacheableResponse","isResponseCacheable"],"mappings":"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","file":"service-worker.js","sourceRoot":"","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 63);\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nimport isNativeFunction from \"@babel/runtime/helpers/esm/isNativeFunction\";\nimport construct from \"@babel/runtime/helpers/esm/construct\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messages } from './messages.js';\nimport '../../_version.js';\nconst fallback = (code, ...args) => {\n    let msg = code;\n    if (args.length > 0) {\n        msg += ` :: ${JSON.stringify(args)}`;\n    }\n    return msg;\n};\nconst generatorFunction = (code, details = {}) => {\n    const message = messages[code];\n    if (!message) {\n        throw new Error(`Unable to find message for code '${code}'.`);\n    }\n    return message(details);\n};\nexport const messageGenerator = (process.env.NODE_ENV === 'production') ?\n    fallback : generatorFunction;\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messageGenerator } from '../models/messages/messageGenerator.js';\nimport '../_version.js';\n/**\n * Workbox errors should be thrown with this class.\n * This allows use to ensure the type easily in tests,\n * helps developers identify errors from workbox\n * easily and allows use to optimise error\n * messages correctly.\n *\n * @private\n */\nclass WorkboxError extends Error {\n    /**\n     *\n     * @param {string} errorCode The error code that\n     * identifies this particular error.\n     * @param {Object=} details Any relevant arguments\n     * that will help developers identify issues should\n     * be added as a key on the context object.\n     */\n    constructor(errorCode, details) {\n        const message = messageGenerator(errorCode, details);\n        super(message);\n        this.name = errorCode;\n        this.details = details;\n    }\n}\nexport { WorkboxError };\n","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst logger = (process.env.NODE_ENV === 'production' ? null : (() => {\n    // Don't overwrite this value if it's already set.\n    // See https://github.com/GoogleChrome/workbox/pull/2284#issuecomment-560470923\n    if (!('__WB_DISABLE_DEV_LOGS' in self)) {\n        self.__WB_DISABLE_DEV_LOGS = false;\n    }\n    let inGroup = false;\n    const methodToColorMap = {\n        debug: `#7f8c8d`,\n        log: `#2ecc71`,\n        warn: `#f39c12`,\n        error: `#c0392b`,\n        groupCollapsed: `#3498db`,\n        groupEnd: null,\n    };\n    const print = function (method, args) {\n        if (self.__WB_DISABLE_DEV_LOGS) {\n            return;\n        }\n        if (method === 'groupCollapsed') {\n            // Safari doesn't print all console.groupCollapsed() arguments:\n            // https://bugs.webkit.org/show_bug.cgi?id=182754\n            if (/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {\n                console[method](...args);\n                return;\n            }\n        }\n        const styles = [\n            `background: ${methodToColorMap[method]}`,\n            `border-radius: 0.5em`,\n            `color: white`,\n            `font-weight: bold`,\n            `padding: 2px 0.5em`,\n        ];\n        // When in a group, the workbox prefix is not displayed.\n        const logPrefix = inGroup ? [] : ['%cworkbox', styles.join(';')];\n        console[method](...logPrefix, ...args);\n        if (method === 'groupCollapsed') {\n            inGroup = true;\n        }\n        if (method === 'groupEnd') {\n            inGroup = false;\n        }\n    };\n    const api = {};\n    const loggerMethods = Object.keys(methodToColorMap);\n    for (const key of loggerMethods) {\n        const method = key;\n        api[method] = (...args) => {\n            print(method, args);\n        };\n    }\n    return api;\n})());\nexport { logger };\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:core:5.1.4'] && _();\n}\ncatch (e) { }\n","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst _cacheNameDetails = {\n    googleAnalytics: 'googleAnalytics',\n    precache: 'precache-v2',\n    prefix: 'workbox',\n    runtime: 'runtime',\n    suffix: typeof registration !== 'undefined' ? registration.scope : '',\n};\nconst _createCacheName = (cacheName) => {\n    return [_cacheNameDetails.prefix, cacheName, _cacheNameDetails.suffix]\n        .filter((value) => value && value.length > 0)\n        .join('-');\n};\nconst eachCacheNameDetail = (fn) => {\n    for (const key of Object.keys(_cacheNameDetails)) {\n        fn(key);\n    }\n};\nexport const cacheNames = {\n    updateDetails: (details) => {\n        eachCacheNameDetail((key) => {\n            if (typeof details[key] === 'string') {\n                _cacheNameDetails[key] = details[key];\n            }\n        });\n    },\n    getGoogleAnalyticsName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.googleAnalytics);\n    },\n    getPrecacheName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.precache);\n    },\n    getPrefix: () => {\n        return _cacheNameDetails.prefix;\n    },\n    getRuntimeName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.runtime);\n    },\n    getSuffix: () => {\n        return _cacheNameDetails.suffix;\n    },\n};\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:precaching:5.1.4'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst getFriendlyURL = (url) => {\n    const urlObj = new URL(String(url), location.href);\n    // See https://github.com/GoogleChrome/workbox/issues/2323\n    // We want to include everything, except for the origin if it's same-origin.\n    return urlObj.href.replace(new RegExp(`^${location.origin}`), '');\n};\nexport { getFriendlyURL };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from './assert.js';\nimport { executeQuotaErrorCallbacks } from './executeQuotaErrorCallbacks.js';\nimport { getFriendlyURL } from './getFriendlyURL.js';\nimport { logger } from './logger.js';\nimport { pluginUtils } from '../utils/pluginUtils.js';\nimport { WorkboxError } from './WorkboxError.js';\nimport '../_version.js';\n/**\n * Checks the list of plugins for the cacheKeyWillBeUsed callback, and\n * executes any of those callbacks found in sequence. The final `Request` object\n * returned by the last plugin is treated as the cache key for cache reads\n * and/or writes.\n *\n * @param {Object} options\n * @param {Request} options.request\n * @param {string} options.mode\n * @param {Array<Object>} [options.plugins=[]]\n * @return {Promise<Request>}\n *\n * @private\n * @memberof module:workbox-core\n */\nconst _getEffectiveRequest = async ({ request, mode, plugins = [], }) => {\n    const cacheKeyWillBeUsedPlugins = pluginUtils.filter(plugins, \"cacheKeyWillBeUsed\" /* CACHE_KEY_WILL_BE_USED */);\n    let effectiveRequest = request;\n    for (const plugin of cacheKeyWillBeUsedPlugins) {\n        effectiveRequest = await plugin[\"cacheKeyWillBeUsed\" /* CACHE_KEY_WILL_BE_USED */].call(plugin, { mode, request: effectiveRequest });\n        if (typeof effectiveRequest === 'string') {\n            effectiveRequest = new Request(effectiveRequest);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(effectiveRequest, Request, {\n                moduleName: 'Plugin',\n                funcName: \"cacheKeyWillBeUsed\" /* CACHE_KEY_WILL_BE_USED */,\n                isReturnValueProblem: true,\n            });\n        }\n    }\n    return effectiveRequest;\n};\n/**\n * This method will call cacheWillUpdate on the available plugins (or use\n * status === 200) to determine if the Response is safe and valid to cache.\n *\n * @param {Object} options\n * @param {Request} options.request\n * @param {Response} options.response\n * @param {Event} [options.event]\n * @param {Array<Object>} [options.plugins=[]]\n * @return {Promise<Response>}\n *\n * @private\n * @memberof module:workbox-core\n */\nconst _isResponseSafeToCache = async ({ request, response, event, plugins = [], }) => {\n    let responseToCache = response;\n    let pluginsUsed = false;\n    for (const plugin of plugins) {\n        if (\"cacheWillUpdate\" /* CACHE_WILL_UPDATE */ in plugin) {\n            pluginsUsed = true;\n            const pluginMethod = plugin[\"cacheWillUpdate\" /* CACHE_WILL_UPDATE */];\n            responseToCache = await pluginMethod.call(plugin, {\n                request,\n                response: responseToCache,\n                event,\n            });\n            if (process.env.NODE_ENV !== 'production') {\n                if (responseToCache) {\n                    assert.isInstance(responseToCache, Response, {\n                        moduleName: 'Plugin',\n                        funcName: \"cacheWillUpdate\" /* CACHE_WILL_UPDATE */,\n                        isReturnValueProblem: true,\n                    });\n                }\n            }\n            if (!responseToCache) {\n                break;\n            }\n        }\n    }\n    if (!pluginsUsed) {\n        if (process.env.NODE_ENV !== 'production') {\n            if (responseToCache) {\n                if (responseToCache.status !== 200) {\n                    if (responseToCache.status === 0) {\n                        logger.warn(`The response for '${request.url}' is an opaque ` +\n                            `response. The caching strategy that you're using will not ` +\n                            `cache opaque responses by default.`);\n                    }\n                    else {\n                        logger.debug(`The response for '${request.url}' returned ` +\n                            `a status code of '${response.status}' and won't be cached as a ` +\n                            `result.`);\n                    }\n                }\n            }\n        }\n        responseToCache = responseToCache && responseToCache.status === 200 ?\n            responseToCache : undefined;\n    }\n    return responseToCache ? responseToCache : null;\n};\n/**\n * This is a wrapper around cache.match().\n *\n * @param {Object} options\n * @param {string} options.cacheName Name of the cache to match against.\n * @param {Request} options.request The Request that will be used to look up\n *     cache entries.\n * @param {Event} [options.event] The event that prompted the action.\n * @param {Object} [options.matchOptions] Options passed to cache.match().\n * @param {Array<Object>} [options.plugins=[]] Array of plugins.\n * @return {Response} A cached response if available.\n *\n * @private\n * @memberof module:workbox-core\n */\nconst matchWrapper = async ({ cacheName, request, event, matchOptions, plugins = [], }) => {\n    const cache = await self.caches.open(cacheName);\n    const effectiveRequest = await _getEffectiveRequest({\n        plugins, request, mode: 'read'\n    });\n    let cachedResponse = await cache.match(effectiveRequest, matchOptions);\n    if (process.env.NODE_ENV !== 'production') {\n        if (cachedResponse) {\n            logger.debug(`Found a cached response in '${cacheName}'.`);\n        }\n        else {\n            logger.debug(`No cached response found in '${cacheName}'.`);\n        }\n    }\n    for (const plugin of plugins) {\n        if (\"cachedResponseWillBeUsed\" /* CACHED_RESPONSE_WILL_BE_USED */ in plugin) {\n            const pluginMethod = plugin[\"cachedResponseWillBeUsed\" /* CACHED_RESPONSE_WILL_BE_USED */];\n            cachedResponse = await pluginMethod.call(plugin, {\n                cacheName,\n                event,\n                matchOptions,\n                cachedResponse,\n                request: effectiveRequest,\n            });\n            if (process.env.NODE_ENV !== 'production') {\n                if (cachedResponse) {\n                    assert.isInstance(cachedResponse, Response, {\n                        moduleName: 'Plugin',\n                        funcName: \"cachedResponseWillBeUsed\" /* CACHED_RESPONSE_WILL_BE_USED */,\n                        isReturnValueProblem: true,\n                    });\n                }\n            }\n        }\n    }\n    return cachedResponse;\n};\n/**\n * Wrapper around cache.put().\n *\n * Will call `cacheDidUpdate` on plugins if the cache was updated, using\n * `matchOptions` when determining what the old entry is.\n *\n * @param {Object} options\n * @param {string} options.cacheName\n * @param {Request} options.request\n * @param {Response} options.response\n * @param {Event} [options.event]\n * @param {Array<Object>} [options.plugins=[]]\n * @param {Object} [options.matchOptions]\n *\n * @private\n * @memberof module:workbox-core\n */\nconst putWrapper = async ({ cacheName, request, response, event, plugins = [], matchOptions, }) => {\n    if (process.env.NODE_ENV !== 'production') {\n        if (request.method && request.method !== 'GET') {\n            throw new WorkboxError('attempt-to-cache-non-get-request', {\n                url: getFriendlyURL(request.url),\n                method: request.method,\n            });\n        }\n    }\n    const effectiveRequest = await _getEffectiveRequest({\n        plugins, request, mode: 'write'\n    });\n    if (!response) {\n        if (process.env.NODE_ENV !== 'production') {\n            logger.error(`Cannot cache non-existent response for ` +\n                `'${getFriendlyURL(effectiveRequest.url)}'.`);\n        }\n        throw new WorkboxError('cache-put-with-no-response', {\n            url: getFriendlyURL(effectiveRequest.url),\n        });\n    }\n    const responseToCache = await _isResponseSafeToCache({\n        event,\n        plugins,\n        response,\n        request: effectiveRequest,\n    });\n    if (!responseToCache) {\n        if (process.env.NODE_ENV !== 'production') {\n            logger.debug(`Response '${getFriendlyURL(effectiveRequest.url)}' will ` +\n                `not be cached.`, responseToCache);\n        }\n        return;\n    }\n    const cache = await self.caches.open(cacheName);\n    const updatePlugins = pluginUtils.filter(plugins, \"cacheDidUpdate\" /* CACHE_DID_UPDATE */);\n    const oldResponse = updatePlugins.length > 0 ?\n        await matchWrapper({ cacheName, matchOptions, request: effectiveRequest }) :\n        null;\n    if (process.env.NODE_ENV !== 'production') {\n        logger.debug(`Updating the '${cacheName}' cache with a new Response for ` +\n            `${getFriendlyURL(effectiveRequest.url)}.`);\n    }\n    try {\n        await cache.put(effectiveRequest, responseToCache);\n    }\n    catch (error) {\n        // See https://developer.mozilla.org/en-US/docs/Web/API/DOMException#exception-QuotaExceededError\n        if (error.name === 'QuotaExceededError') {\n            await executeQuotaErrorCallbacks();\n        }\n        throw error;\n    }\n    for (const plugin of updatePlugins) {\n        await plugin[\"cacheDidUpdate\" /* CACHE_DID_UPDATE */].call(plugin, {\n            cacheName,\n            event,\n            oldResponse,\n            newResponse: responseToCache,\n            request: effectiveRequest,\n        });\n    }\n};\nexport const cacheWrapper = {\n    put: putWrapper,\n    match: matchWrapper,\n};\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from './WorkboxError.js';\nimport { logger } from './logger.js';\nimport { assert } from './assert.js';\nimport { getFriendlyURL } from '../_private/getFriendlyURL.js';\nimport { pluginUtils } from '../utils/pluginUtils.js';\nimport '../_version.js';\n/**\n * Wrapper around the fetch API.\n *\n * Will call requestWillFetch on available plugins.\n *\n * @param {Object} options\n * @param {Request|string} options.request\n * @param {Object} [options.fetchOptions]\n * @param {ExtendableEvent} [options.event]\n * @param {Array<Object>} [options.plugins=[]]\n * @return {Promise<Response>}\n *\n * @private\n * @memberof module:workbox-core\n */\nconst wrappedFetch = async ({ request, fetchOptions, event, plugins = [], }) => {\n    if (typeof request === 'string') {\n        request = new Request(request);\n    }\n    // We *should* be able to call `await event.preloadResponse` even if it's\n    // undefined, but for some reason, doing so leads to errors in our Node unit\n    // tests. To work around that, explicitly check preloadResponse's value first.\n    if (event instanceof FetchEvent && event.preloadResponse) {\n        const possiblePreloadResponse = await event.preloadResponse;\n        if (possiblePreloadResponse) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.log(`Using a preloaded navigation response for ` +\n                    `'${getFriendlyURL(request.url)}'`);\n            }\n            return possiblePreloadResponse;\n        }\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        assert.isInstance(request, Request, {\n            paramName: 'request',\n            expectedClass: Request,\n            moduleName: 'workbox-core',\n            className: 'fetchWrapper',\n            funcName: 'wrappedFetch',\n        });\n    }\n    const failedFetchPlugins = pluginUtils.filter(plugins, \"fetchDidFail\" /* FETCH_DID_FAIL */);\n    // If there is a fetchDidFail plugin, we need to save a clone of the\n    // original request before it's either modified by a requestWillFetch\n    // plugin or before the original request's body is consumed via fetch().\n    const originalRequest = failedFetchPlugins.length > 0 ?\n        request.clone() : null;\n    try {\n        for (const plugin of plugins) {\n            if (\"requestWillFetch\" /* REQUEST_WILL_FETCH */ in plugin) {\n                const pluginMethod = plugin[\"requestWillFetch\" /* REQUEST_WILL_FETCH */];\n                const requestClone = request.clone();\n                request = await pluginMethod.call(plugin, {\n                    request: requestClone,\n                    event,\n                });\n                if (process.env.NODE_ENV !== 'production') {\n                    if (request) {\n                        assert.isInstance(request, Request, {\n                            moduleName: 'Plugin',\n                            funcName: \"cachedResponseWillBeUsed\" /* CACHED_RESPONSE_WILL_BE_USED */,\n                            isReturnValueProblem: true,\n                        });\n                    }\n                }\n            }\n        }\n    }\n    catch (err) {\n        throw new WorkboxError('plugin-error-request-will-fetch', {\n            thrownError: err,\n        });\n    }\n    // The request can be altered by plugins with `requestWillFetch` making\n    // the original request (Most likely from a `fetch` event) to be different\n    // to the Request we make. Pass both to `fetchDidFail` to aid debugging.\n    const pluginFilteredRequest = request.clone();\n    try {\n        let fetchResponse;\n        // See https://github.com/GoogleChrome/workbox/issues/1796\n        if (request.mode === 'navigate') {\n            fetchResponse = await fetch(request);\n        }\n        else {\n            fetchResponse = await fetch(request, fetchOptions);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.debug(`Network request for ` +\n                `'${getFriendlyURL(request.url)}' returned a response with ` +\n                `status '${fetchResponse.status}'.`);\n        }\n        for (const plugin of plugins) {\n            if (\"fetchDidSucceed\" /* FETCH_DID_SUCCEED */ in plugin) {\n                fetchResponse = await plugin[\"fetchDidSucceed\" /* FETCH_DID_SUCCEED */]\n                    .call(plugin, {\n                    event,\n                    request: pluginFilteredRequest,\n                    response: fetchResponse,\n                });\n                if (process.env.NODE_ENV !== 'production') {\n                    if (fetchResponse) {\n                        assert.isInstance(fetchResponse, Response, {\n                            moduleName: 'Plugin',\n                            funcName: \"fetchDidSucceed\" /* FETCH_DID_SUCCEED */,\n                            isReturnValueProblem: true,\n                        });\n                    }\n                }\n            }\n        }\n        return fetchResponse;\n    }\n    catch (error) {\n        if (process.env.NODE_ENV !== 'production') {\n            logger.error(`Network request for ` +\n                `'${getFriendlyURL(request.url)}' threw an error.`, error);\n        }\n        for (const plugin of failedFetchPlugins) {\n            await plugin[\"fetchDidFail\" /* FETCH_DID_FAIL */].call(plugin, {\n                error,\n                event,\n                originalRequest: originalRequest.clone(),\n                request: pluginFilteredRequest.clone(),\n            });\n        }\n        throw error;\n    }\n};\nconst fetchWrapper = {\n    fetch: wrappedFetch,\n};\nexport { fetchWrapper };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:routing:5.1.4'] && _();\n}\ncatch (e) { }\n","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:strategies:5.1.4'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A helper function that prevents a promise from being flagged as unused.\n *\n * @private\n **/\nexport function dontWaitFor(promise) {\n    // Effective no-op.\n    promise.then(() => { });\n}\n","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport isNativeReflectConstruct from \"@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nimport possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nexport const pluginUtils = {\n    filter: (plugins, callbackName) => {\n        return plugins.filter((plugin) => callbackName in plugin);\n    },\n};\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:expiration:5.1.4'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from './_private/logger.js';\nimport { assert } from './_private/assert.js';\nimport { quotaErrorCallbacks } from './models/quotaErrorCallbacks.js';\nimport './_version.js';\n/**\n * Adds a function to the set of quotaErrorCallbacks that will be executed if\n * there's a quota error.\n *\n * @param {Function} callback\n * @memberof module:workbox-core\n */\nfunction registerQuotaErrorCallback(callback) {\n    if (process.env.NODE_ENV !== 'production') {\n        assert.isType(callback, 'function', {\n            moduleName: 'workbox-core',\n            funcName: 'register',\n            paramName: 'callback',\n        });\n    }\n    quotaErrorCallbacks.add(callback);\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log('Registered a callback to respond to quota errors.', callback);\n    }\n}\nexport { registerQuotaErrorCallback };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from '../_private/logger.js';\nimport { quotaErrorCallbacks } from '../models/quotaErrorCallbacks.js';\nimport '../_version.js';\n/**\n * Runs all of the callback functions, one at a time sequentially, in the order\n * in which they were registered.\n *\n * @memberof module:workbox-core\n * @private\n */\nasync function executeQuotaErrorCallbacks() {\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log(`About to run ${quotaErrorCallbacks.size} ` +\n            `callbacks to clean up caches.`);\n    }\n    for (const callback of quotaErrorCallbacks) {\n        await callback();\n        if (process.env.NODE_ENV !== 'production') {\n            logger.log(callback, 'is complete.');\n        }\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log('Finished running callbacks.');\n    }\n}\nexport { executeQuotaErrorCallbacks };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A class that wraps common IndexedDB functionality in a promise-based API.\n * It exposes all the underlying power and functionality of IndexedDB, but\n * wraps the most commonly used features in a way that's much simpler to use.\n *\n * @private\n */\nexport class DBWrapper {\n    /**\n     * @param {string} name\n     * @param {number} version\n     * @param {Object=} [callback]\n     * @param {!Function} [callbacks.onupgradeneeded]\n     * @param {!Function} [callbacks.onversionchange] Defaults to\n     *     DBWrapper.prototype._onversionchange when not specified.\n     * @private\n     */\n    constructor(name, version, { onupgradeneeded, onversionchange, } = {}) {\n        this._db = null;\n        this._name = name;\n        this._version = version;\n        this._onupgradeneeded = onupgradeneeded;\n        this._onversionchange = onversionchange || (() => this.close());\n    }\n    /**\n     * Returns the IDBDatabase instance (not normally needed).\n     * @return {IDBDatabase|undefined}\n     *\n     * @private\n     */\n    get db() {\n        return this._db;\n    }\n    /**\n     * Opens a connected to an IDBDatabase, invokes any onupgradedneeded\n     * callback, and added an onversionchange callback to the database.\n     *\n     * @return {IDBDatabase}\n     * @private\n     */\n    async open() {\n        if (this._db)\n            return;\n        this._db = await new Promise((resolve, reject) => {\n            // This flag is flipped to true if the timeout callback runs prior\n            // to the request failing or succeeding. Note: we use a timeout instead\n            // of an onblocked handler since there are cases where onblocked will\n            // never never run. A timeout better handles all possible scenarios:\n            // https://github.com/w3c/IndexedDB/issues/223\n            let openRequestTimedOut = false;\n            setTimeout(() => {\n                openRequestTimedOut = true;\n                reject(new Error('The open request was blocked and timed out'));\n            }, this.OPEN_TIMEOUT);\n            const openRequest = indexedDB.open(this._name, this._version);\n            openRequest.onerror = () => reject(openRequest.error);\n            openRequest.onupgradeneeded = (evt) => {\n                if (openRequestTimedOut) {\n                    openRequest.transaction.abort();\n                    openRequest.result.close();\n                }\n                else if (typeof this._onupgradeneeded === 'function') {\n                    this._onupgradeneeded(evt);\n                }\n            };\n            openRequest.onsuccess = () => {\n                const db = openRequest.result;\n                if (openRequestTimedOut) {\n                    db.close();\n                }\n                else {\n                    db.onversionchange = this._onversionchange.bind(this);\n                    resolve(db);\n                }\n            };\n        });\n        return this;\n    }\n    /**\n     * Polyfills the native `getKey()` method. Note, this is overridden at\n     * runtime if the browser supports the native method.\n     *\n     * @param {string} storeName\n     * @param {*} query\n     * @return {Array}\n     * @private\n     */\n    async getKey(storeName, query) {\n        return (await this.getAllKeys(storeName, query, 1))[0];\n    }\n    /**\n     * Polyfills the native `getAll()` method. Note, this is overridden at\n     * runtime if the browser supports the native method.\n     *\n     * @param {string} storeName\n     * @param {*} query\n     * @param {number} count\n     * @return {Array}\n     * @private\n     */\n    async getAll(storeName, query, count) {\n        return await this.getAllMatching(storeName, { query, count });\n    }\n    /**\n     * Polyfills the native `getAllKeys()` method. Note, this is overridden at\n     * runtime if the browser supports the native method.\n     *\n     * @param {string} storeName\n     * @param {*} query\n     * @param {number} count\n     * @return {Array}\n     * @private\n     */\n    async getAllKeys(storeName, query, count) {\n        const entries = await this.getAllMatching(storeName, { query, count, includeKeys: true });\n        return entries.map((entry) => entry.key);\n    }\n    /**\n     * Supports flexible lookup in an object store by specifying an index,\n     * query, direction, and count. This method returns an array of objects\n     * with the signature .\n     *\n     * @param {string} storeName\n     * @param {Object} [opts]\n     * @param {string} [opts.index] The index to use (if specified).\n     * @param {*} [opts.query]\n     * @param {IDBCursorDirection} [opts.direction]\n     * @param {number} [opts.count] The max number of results to return.\n     * @param {boolean} [opts.includeKeys] When true, the structure of the\n     *     returned objects is changed from an array of values to an array of\n     *     objects in the form {key, primaryKey, value}.\n     * @return {Array}\n     * @private\n     */\n    async getAllMatching(storeName, { index, query = null, // IE/Edge errors if query === `undefined`.\n    direction = 'next', count, includeKeys = false, } = {}) {\n        return await this.transaction([storeName], 'readonly', (txn, done) => {\n            const store = txn.objectStore(storeName);\n            const target = index ? store.index(index) : store;\n            const results = [];\n            const request = target.openCursor(query, direction);\n            request.onsuccess = () => {\n                const cursor = request.result;\n                if (cursor) {\n                    results.push(includeKeys ? cursor : cursor.value);\n                    if (count && results.length >= count) {\n                        done(results);\n                    }\n                    else {\n                        cursor.continue();\n                    }\n                }\n                else {\n                    done(results);\n                }\n            };\n        });\n    }\n    /**\n     * Accepts a list of stores, a transaction type, and a callback and\n     * performs a transaction. A promise is returned that resolves to whatever\n     * value the callback chooses. The callback holds all the transaction logic\n     * and is invoked with two arguments:\n     *   1. The IDBTransaction object\n     *   2. A `done` function, that's used to resolve the promise when\n     *      when the transaction is done, if passed a value, the promise is\n     *      resolved to that value.\n     *\n     * @param {Array<string>} storeNames An array of object store names\n     *     involved in the transaction.\n     * @param {string} type Can be `readonly` or `readwrite`.\n     * @param {!Function} callback\n     * @return {*} The result of the transaction ran by the callback.\n     * @private\n     */\n    async transaction(storeNames, type, callback) {\n        await this.open();\n        return await new Promise((resolve, reject) => {\n            const txn = this._db.transaction(storeNames, type);\n            txn.onabort = () => reject(txn.error);\n            txn.oncomplete = () => resolve();\n            callback(txn, (value) => resolve(value));\n        });\n    }\n    /**\n     * Delegates async to a native IDBObjectStore method.\n     *\n     * @param {string} method The method name.\n     * @param {string} storeName The object store name.\n     * @param {string} type Can be `readonly` or `readwrite`.\n     * @param {...*} args The list of args to pass to the native method.\n     * @return {*} The result of the transaction.\n     * @private\n     */\n    async _call(method, storeName, type, ...args) {\n        const callback = (txn, done) => {\n            const objStore = txn.objectStore(storeName);\n            // TODO(philipwalton): Fix this underlying TS2684 error.\n            // @ts-ignore\n            const request = objStore[method].apply(objStore, args);\n            request.onsuccess = () => done(request.result);\n        };\n        return await this.transaction([storeName], type, callback);\n    }\n    /**\n     * Closes the connection opened by `DBWrapper.open()`. Generally this method\n     * doesn't need to be called since:\n     *   1. It's usually better to keep a connection open since opening\n     *      a new connection is somewhat slow.\n     *   2. Connections are automatically closed when the reference is\n     *      garbage collected.\n     * The primary use case for needing to close a connection is when another\n     * reference (typically in another tab) needs to upgrade it and would be\n     * blocked by the current, open connection.\n     *\n     * @private\n     */\n    close() {\n        if (this._db) {\n            this._db.close();\n            this._db = null;\n        }\n    }\n}\n// Exposed on the prototype to let users modify the default timeout on a\n// per-instance or global basis.\nDBWrapper.prototype.OPEN_TIMEOUT = 2000;\n// Wrap native IDBObjectStore methods according to their mode.\nconst methodsToWrap = {\n    readonly: ['get', 'count', 'getKey', 'getAll', 'getAllKeys'],\n    readwrite: ['add', 'put', 'clear', 'delete'],\n};\nfor (const [mode, methods] of Object.entries(methodsToWrap)) {\n    for (const method of methods) {\n        if (method in IDBObjectStore.prototype) {\n            // Don't use arrow functions here since we're outside of the class.\n            DBWrapper.prototype[method] =\n                async function (storeName, ...args) {\n                    return await this._call(method, storeName, mode, ...args);\n                };\n        }\n    }\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Deletes the database.\n * Note: this is exported separately from the DBWrapper module because most\n * usages of IndexedDB in workbox dont need deleting, and this way it can be\n * reused in tests to delete databases without creating DBWrapper instances.\n *\n * @param {string} name The database name.\n * @private\n */\nexport const deleteDatabase = async (name) => {\n    await new Promise((resolve, reject) => {\n        const request = indexedDB.deleteDatabase(name);\n        request.onerror = () => {\n            reject(request.error);\n        };\n        request.onblocked = () => {\n            reject(new Error('Delete blocked'));\n        };\n        request.onsuccess = () => {\n            resolve();\n        };\n    });\n};\n","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nimport isNativeReflectConstruct from \"@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n// Callbacks to be executed whenever there's a quota error.\nconst quotaErrorCallbacks = new Set();\nexport { quotaErrorCallbacks };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:cacheable-response:5.1.4'] && _();\n}\ncatch (e) { }\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Layer0 configuration file name.\n */\nexports.LAYER0_CONFIG_FILE = 'layer0.config.js';\n/**\n * Indicate asset files that need to be uploaded under a different\n * bucket key.\n * It contains values like\n * {\n *   '/posts' => '/posts/index.html'\n * }\n */\nexports.LAYER0_ASSET_ALIASES_FILE = 'asset-aliases.json';\n/**\n * Environment variables used by Layer0.\n */\nexports.LAYER0_ENV_VARIABLES = {\n    /**\n     * Layer0 configuration environment variable key.\n     */\n    config: 'LAYER0_CONFIG',\n    /**\n     * Indicates whether code is running locally or in the cloud.\n     * @private\n     */\n    deploymentType: 'LAYER0_DEPLOYMENT_TYPE',\n    /**\n     * Allows Layer0 development team to easily override Layer0 version\n     * during development process.\n     * @private\n     */\n    versionOverride: 'LAYER0_VERSION_OVERRIDE',\n};\n/**\n * Indicates that code is running in AWS.\n * @private\n */\nexports.LAYER0_DEPLOYMENT_TYPE_AWS = 'AWS';\n/**\n * Prefix of all Layer0 headers.\n */\nexports.LAYER0_HEADERS_PREFIX = 'x-0-';\n/**\n * Maximum number of user headers allowed by Layer0 platform.\n *\n * We limit the request and response headers allowed to 70. This is due to a limitation that edge has\n * which at the moment supports up to 96 headers. Edge provider itself needs to use some of those headers\n * with the remainder used by our edge code.\n *\n * NOTE: This constant must be equal ot the constant of the same name defined in Layer0 buffer proxy.\n * NOTE: If this constant is updated then the constant of the same name has to be updated in @layer0/build-lambda module.\n */\nexports.LAYER0_MAX_USER_HEADERS_ALLOWED = 70;\n/**\n * Status code returned when there are too many request or response headers.\n *\n * Must be equal to HeaderOverflowError status code as defined in build lambda and Layer0 buffer proxy.\n */\nexports.LAYER0_TOO_MANY_HEADERS_STATUS_CODE = 542;\n/**\n * The status code returned when the layer0_prefetch query param is present and a response could not be found in the cache.\n */\nexports.LAYER0_UNCACHED_PREFETCH_STATUS = 412;\n/**\n * CDN-as-code configuration actions\n */\nexports.ACTIONS = {\n    setHeader: 'set-header',\n    updateHeader: 'update-header',\n    removeHeader: 'remove-header',\n    syntheticRes: 'synthetic-response',\n    updatePath: 'update-path',\n    proxy: 'proxy',\n    addCookie: 'add-cookie',\n    updateCookie: 'update-cookie',\n    removeCookie: 'remove-cookie',\n};\n/**\n * The backend for cloud functions\n */\nexports.BACKENDS = {\n    js: '__js__',\n    static: '__static__',\n    permanentStatic: '__permanent_static__',\n    imageOptimizer: '__image_optimizer__',\n};\n/**\n * The hostname used for the internal service running the user's application.\n */\nexports.JS_BACKEND_HOSTNAME = '127.0.0.1';\nexports.HTTP_METHODS = {\n    head: 'head',\n    get: 'get',\n    post: 'post',\n    delete: 'delete',\n    put: 'put',\n    patch: 'patch',\n    options: 'options',\n};\n/**\n * Common HTTP headers.\n */\nexports.HTTP_HEADERS = {\n    authorization: 'authorization',\n    acceptEncoding: 'accept-encoding',\n    cacheControl: 'cache-control',\n    contentEncoding: 'content-encoding',\n    contentLength: 'content-length',\n    contentType: 'content-type',\n    cookie: 'cookie',\n    host: 'host',\n    location: 'location',\n    serverTiming: 'server-timing',\n    setCookie: 'set-cookie',\n    userAgent: 'user-agent',\n    vary: 'vary',\n    xForwardedFor: 'x-forwarded-for',\n    xRequestId: 'x-request-id',\n    xSwCacheControl: 'x-sw-cache-control',\n    x0Browser: 'x-0-browser',\n    x0CacheControl: 'x-0-cache-control',\n    x0CachingStatus: 'x-0-caching-status',\n    x0ClientIp: 'x-0-client-ip',\n    x0Components: 'x-0-components',\n    x0Destination: 'x-0-destination',\n    x0Device: 'x-0-device',\n    x0DeviceIsBot: 'x-0-device-is-bot',\n    x0GeoCity: 'x-0-geo-city',\n    x0GeoCountryCode: 'x-0-geo-country-code',\n    x0GeoLatitude: 'x-0-geo-latitude',\n    x0GeoLongitude: 'x-0-geo-longitude',\n    x0GeoPostalCode: 'x-0-geo-postal-code',\n    x0MatchedRoutes: 'x-0-matched-routes',\n    x0Protocol: 'x-0-protocol',\n    x0Route: 'x-0-route',\n    x0Status: 'x-0-status',\n    x0SurrogateKey: 'x-0-surrogate-key',\n    x0T: 'x-0-t',\n    x0UserT: 'x-0-user-t',\n    x0Vendor: 'x-0-vendor',\n    x0Version: 'x-0-version',\n};\n/**\n * Values for x-0-caching-status\n */\nexports.CACHING_STATUS = {\n    ok: 'ok',\n    private: 'private',\n    method: 'method',\n    bodyTooBig: 'body-too-big',\n    code: 'code',\n    setCookie: 'set-cookie',\n    noMaxAge: 'no-max-age',\n};\nexports.CACHEABLE_METHODS = new Set(['get', 'head']);\n/**\n * When present, this query parameter will cause Layer0 to return a 412 status\n * if a response could not be found in the cache.\n */\nexports.THROTTLED_QUERY_PARAM = 'layer0_prefetch';\n/**\n * Same value as above but DEPRECATED.\n */\nexports.PREFETCH_QUERY_PARAM = exports.THROTTLED_QUERY_PARAM;\n/**\n Labels the request so that devtools will display as prefetched\n */\nexports.DEVTOOLS_PREFETCH_QUERY_PARAM = 'layer0_dt_pf';\n/**\n * The name of the query parameter used to detect HEAD requests.\n */\nexports.HEAD_QUERY_PARAM = 'layer0_head';\n/**\n * The name of the query parameter used for the body of POST requests, which is used for the cache key\n */\nexports.POST_BODY_QUERY_PARAM = 'pref_layer0_body';\n/**\n * The name of the query parameter used for the method of requests, which is used for the cache key\n */\nexports.METHOD_QUERY_PARAM = 'pref_layer0_method';\n/**\n * Route Group name, which is used in router for fallback routes\n */\nexports.ROUTES_FALLBACK = 'fallback';\n/**\n * Route Group name, which is used in router for error page routes\n */\nexports.ROUTES_CATCH_GROUP = 'catch';\n/**\n * The path for the built-in image optimizer.\n */\nexports.LAYER0_IMAGE_OPTIMIZER_PATH = '/__layer0_image_optimizer';\n","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","var defineProperty = require(\"./defineProperty\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nmodule.exports = _objectSpread2;","var unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nmodule.exports = _createForOfIteratorHelper;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * The name of the prefetch cache.\n *\n * Defaults to `prefetch`.\n */\nexports.CACHE_NAME = process.env.LAYER0_PREFETCH_CACHE_NAME || 'prefetch';\n/**\n * The header that lists the urls that were fetched from backends during server side rendering\n */\nexports.BACKEND_REQUESTS_RESPONSE_HEADER_NAME = 'x-0-upstream-requests';\n/**\n * The value of the prefetch header. Defaults to `1`.\n */\nexports.PREFETCH_HEADER_VALUE = process.env.LAYER0_PREFETCH_HEADER_VALUE || '1';\n","\"use strict\";\n/* istanbul ignore file */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction log(...message) {\n    if (process.env.NODE_ENV !== 'production') {\n        console.log('%c@layer0/prefetch', 'background: #43a047; color: #ffffff; font-weight:bold; padding: 3px 5px; border-radius: 5px', ...message);\n    }\n}\nexports.default = log;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"@layer0/core/constants\");\nconst constants_2 = require(\"../constants\");\nconst log_1 = __importDefault(require(\"./log\"));\nconst prefetch_1 = require(\"./prefetch\");\nconst origin = new URL(self.origin);\nfunction isPrefetchRequest(request) {\n    return new URL(request.url).searchParams.has(constants_1.DEVTOOLS_PREFETCH_QUERY_PARAM);\n}\nexports.isPrefetchRequest = isPrefetchRequest;\nasync function normalizeRequestUrlForCache(request, { cacheHost } = {}) {\n    request = request.clone();\n    const url = new URL(request.url);\n    // When reading/writing cacheHost URLs convert them back to origin\n    if (cacheHost && url.hostname == cacheHost.hostname) {\n        url.host = origin.host;\n        url.protocol = origin.protocol;\n    }\n    const method = request.method.toLowerCase();\n    // For non-GET requests, we need to add the request body to the cache key by appending in to the URL query string\n    if (method !== 'get') {\n        let body = await request.text();\n        const bodyParam = url.searchParams.get(constants_1.POST_BODY_QUERY_PARAM);\n        if (!bodyParam && body) {\n            url.searchParams.set(constants_1.POST_BODY_QUERY_PARAM, encodeURIComponent(body));\n        }\n        // add method to the cache key so that we can cache requests to the same path with different methods\n        url.searchParams.set(constants_1.METHOD_QUERY_PARAM, request.method.toLowerCase());\n    }\n    // remove layer0_prefetch and layer0_dt_pf query params so that prefetches and real requests\n    // return from the same cache space\n    url.searchParams.delete(constants_1.THROTTLED_QUERY_PARAM);\n    url.searchParams.delete(constants_1.DEVTOOLS_PREFETCH_QUERY_PARAM);\n    // Decode query parameters both when writing to cache and when reading\n    // from cache. This ensures the cache is used no matter whether the URL\n    // is encoded in either step.\n    decodeQueryParams(url);\n    return url.toString();\n}\nexports.normalizeRequestUrlForCache = normalizeRequestUrlForCache;\nclass PrefetchPlugin {\n    constructor({ incrementRead, incrementWrite, cacheHost, prefetchUpstreamRequests, }) {\n        this.incrementRead = incrementRead;\n        this.incrementWrite = incrementWrite;\n        this.cacheHost = cacheHost;\n        this.prefetchUpstreamRequests = prefetchUpstreamRequests;\n    }\n    async requestWillFetch({ request }) {\n        // We need to send a clone of the request so that we can read the request body and use\n        // it in the cache key in the write phase of the cacheKeyWillBeUsed method.\n        return request.clone();\n    }\n    /**\n     * Called when an object is read from or written to the cache.  Here we\n     * compute cache stats and ensure that ?layer0_prefetch is removed from the cache key so\n     * that future requests for prefetched resources will match.\n     */\n    async cacheKeyWillBeUsed({ request, mode }) {\n        if (!isPrefetchRequest(request)) {\n            if (mode === 'read') {\n                this.incrementRead();\n            }\n            else {\n                this.incrementWrite();\n            }\n        }\n        return normalizeRequestUrlForCache(request, { cacheHost: this.cacheHost });\n    }\n    /**\n     * Called when a response is about to be written to the cache.\n     */\n    async cacheWillUpdate({ response, request }) {\n        // If prefetchUpstreamRequests is set, we only prefetch the html pages in SPA mode\n        // (e.g Angular) to get the upstream requests response header.  We don't actually want\n        // to serve the html from the cache, so this returns null:\n        if (this.prefetchUpstreamRequests) {\n            const backendRequests = response.headers.get(constants_2.BACKEND_REQUESTS_RESPONSE_HEADER_NAME);\n            if (backendRequests) {\n                const urlsToPrefetch = backendRequests.split(';');\n                urlsToPrefetch.forEach(url => {\n                    if (url)\n                        prefetch_1.prefetch(url);\n                });\n            }\n            return null;\n        }\n        // Service workers do not handle redirects well. If a redirected response is put in the cache,\n        // you'll see this error: \"a ServiceWorker passed a redirected Response to FetchEvent.respondWith()\n        // while RedirectMode is not ‘follow\"\n        // Returning null here prevents the response from being cached\n        if (response.redirected) {\n            log_1.default(`${response.url} was not added to the cache because it was a redirect.`);\n            return null;\n        }\n        else {\n            log_1.default(`${response.url} was added to the cache with key ${request.url}.`);\n            return response;\n        }\n    }\n}\nexports.default = PrefetchPlugin;\n/**\n * Mutates the searchParams object, ensuring that each value is decoded.\n * @param {URL} url The URL whose params should be decoded\n */\nfunction decodeQueryParams(url) {\n    const maybeDecode = (val) => {\n        try {\n            return decodeURIComponent(val);\n        }\n        catch (e) {\n            // it will fail if the string has a % in it that isn't a URL-decoded entity,\n            // so that means the string is already decoded so we can just return the value:\n            return val;\n        }\n    };\n    url.searchParams.forEach((param, key) => {\n        url.searchParams.set(maybeDecode(key), maybeDecode(param));\n    });\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst messageBrowser_1 = __importDefault(require(\"./messageBrowser\"));\n/**\n * Prefetches an asset.\n * @param url The asset URL\n * @param as The value for the link element's `as` attribute.\n *  See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link.\n *  Use \"fetch\" for html pages as Safari doesn't support \"document\".\n */\nfunction prefetch(url, as = 'fetch', options = { cors: 'anonymous' }) {\n    return messageBrowser_1.default({ action: 'prefetch', url, as, options });\n}\nexports.prefetch = prefetch;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Sends a message to the last focused browser window.\n * @param message\n */\nfunction messageBrowser(message, { broadcast = false } = {}) {\n    // @ts-ignore\n    return self.clients.matchAll({ type: 'window' }).then((clients) => {\n        let targetClients = clients;\n        if (!broadcast && clients.length) {\n            // clients array is ordered by last focused\n            targetClients = [clients[0]];\n        }\n        targetClients.forEach(client => client.postMessage(message));\n    });\n}\nexports.default = messageBrowser;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Prefetcher_1 = require(\"./Prefetcher\");\nexports.Prefetcher = Prefetcher_1.default;\nvar prefetch_1 = require(\"./prefetch\");\nexports.prefetch = prefetch_1.prefetch;\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst workbox_routing_1 = require(\"workbox-routing\");\nconst workbox_strategies_1 = require(\"workbox-strategies\");\nconst workbox_expiration_1 = require(\"workbox-expiration\");\nconst workbox_cacheable_response_1 = require(\"workbox-cacheable-response\");\nconst constants_1 = require(\"../constants\");\nconst log_1 = __importDefault(require(\"./log\"));\nconst PrefetchPlugin_1 = __importDefault(require(\"./PrefetchPlugin\"));\nconst DevtoolsPlugin_1 = __importDefault(require(\"./DevtoolsPlugin\"));\nconst messageBrowser_1 = __importDefault(require(\"./messageBrowser\"));\nconst CustomCacheKeyPlugin_1 = __importDefault(require(\"./CustomCacheKeyPlugin\"));\nconst ChangeMethodPlugin_1 = __importDefault(require(\"./ChangeMethodPlugin\"));\nclass Stats {\n    constructor() {\n        this.hits = 0;\n        this.misses = 0;\n    }\n}\nexports.Stats = Stats;\nconst BUFFER_DELAY_MS = 10000;\n/**\n * Handles prefetching and caching in the the service worker.  Responses\n * are cached based on the `browser.serviceWorkerSeconds` cache setting in your routes.\n *\n * **Example routes.js**\n *\n * ```js\n *  import { Router } from '@layer0/core/router'\n *\n *  module.exports = new Router()\n *    .match('/some/path', ({ cache }) => {\n *      cache({\n *        edge: {\n *          maxAgeSeconds: 60 * 60 * 24 // one day\n *        },\n *        browser: {\n *          serviceWorkerSeconds: 60 * 60 // one hour\n *        }\n *      })\n *    })\n * ```\n *\n * **Example Service Worker**\n *\n * ```js\n *  import { skipWaiting, clientsClaim } from 'workbox-core'\n *  import { Prefetcher } from '@layer0/prefetch/sw'\n *  import { precacheAndRoute } from 'workbox-precaching'\n *\n *  skipWaiting()\n *  clientsClaim()\n *  precacheAndRoute(self.__WB_MANIFEST || [])\n *\n *  new Prefetcher().route()\n * ```\n */\nclass Prefetcher {\n    constructor(config = { plugins: [] }) {\n        // For performance reasons, Devtools plugins are disabled until the first\n        // 'layer0-devtools-syn' message is received (ie: a Devtools client is enabled).\n        // But once enabled, they will remain active until the Service Worker is reinstalled\n        this.devtoolsEnabled = false;\n        /**\n         * bufferedDevtoolMessages keeps track of the request received in the last BUFFER_DELAY_MS.\n         */\n        this.bufferedDevtoolMessages = [];\n        this.config = config;\n        let manifestURL = '__layer0__/cache-manifest.js';\n        this.cacheOrigins = [self.origin];\n        if (config.cacheHost) {\n            this.cacheHost = new URL(`https://${config.cacheHost}`);\n            this.cacheOrigins.push(this.cacheHost.origin);\n            manifestURL = this.cacheHost.toString() + manifestURL;\n        }\n        importScripts(manifestURL);\n        this.cacheableResponsePlugin = new workbox_cacheable_response_1.CacheableResponsePlugin({\n            statuses: [200, 301, 302],\n        });\n        this.stats = new Stats();\n        this.initStats();\n        this.initDevtoolsHandshakeListener();\n    }\n    getRouteConfigsFromManifest() {\n        // @ts-ignore\n        const manifest = self.__LAYER0_CACHE_MANIFEST__;\n        return manifest.map(({ criteriaPath, route, cacheOptions, method, returnsResponse }) => {\n            var _a, _b, _c;\n            const maxAgeSeconds = (_a = cacheOptions.browser) === null || _a === void 0 ? void 0 : _a.serviceWorkerSeconds;\n            const edgeMaxAgeSeconds = (_b = cacheOptions.edge) === null || _b === void 0 ? void 0 : _b.maxAgeSeconds;\n            return {\n                criteriaPath,\n                pattern: route,\n                method,\n                maxAgeSeconds,\n                edgeMaxAgeSeconds,\n                returnsResponse,\n                isPartialPathRoute: true,\n                key: cacheOptions.key,\n                convertToGet: (_c = cacheOptions.browser) === null || _c === void 0 ? void 0 : _c.convertToGet,\n                prefetchUpstreamRequests: cacheOptions.prefetchUpstreamRequests,\n            };\n        });\n    }\n    registerDevtoolsRoutes() {\n        for (const routeConfig of this.getRouteConfigsFromManifest()) {\n            // Add listener for all routes that are not cached in the browser as those already have a route handler\n            if (!routeConfig.maxAgeSeconds && !routeConfig.returnsResponse) {\n                this.createDevtoolsRoute(routeConfig);\n            }\n        }\n        // Also add a fallback route in case the cache manifest does not specify any\n        this.createDevtoolsRoute();\n    }\n    /**\n     * Adds a fetch event listener that serves content from the browser cache when available.  When\n     * a request is not in the cache, it will be fetched from the network and added to the\n     * cache if the route has `browser.serviceWorkerSeconds` defined in its `cache` setting.\n     */\n    route() {\n        for (const routeConfig of this.getRouteConfigsFromManifest()) {\n            if (\n            // Only listen for browser cached routes:\n            (routeConfig.maxAgeSeconds && routeConfig.maxAgeSeconds > 0) ||\n                // or for routes that return an x-0-upstream-requests header:\n                routeConfig.prefetchUpstreamRequests) {\n                this.createRoute(routeConfig);\n            }\n            else if (routeConfig.returnsResponse) {\n                // register routes that return responses to force a network call and prevent\n                // a later route from matching and caching non-cacheable routes:\n                workbox_routing_1.registerRoute(this.shouldIntercept(new RegExp(routeConfig.pattern, 'i'), routeConfig.isPartialPathRoute), new workbox_strategies_1.NetworkOnly({\n                    plugins: [this.createDevtoolsPlugin(routeConfig)],\n                }));\n            }\n        }\n        return this;\n    }\n    cache(pattern, maxAgeSeconds = 60 * 60 * 24) {\n        this.createRoute({ pattern: pattern.source, maxAgeSeconds, isPartialPathRoute: false });\n        return this;\n    }\n    /**\n     * Starts listening for messages from the browser\n     */\n    initStats() {\n        self.addEventListener('message', (e) => {\n            if (e.data.action === 'get-stats') {\n                messageBrowser_1.default({\n                    type: 'stats',\n                    stats: this.stats,\n                });\n            }\n        });\n    }\n    /**\n     * Here we implement a handshake protocol between the devtool window client and the service worker:\n     * 1. Devtools sends the 'layer0-devtools-syn' event and starts listening for 'layer0-devtools-ack' event\n     * 2. Service worker receives the 'layer0-devtools-syn' event and sends the 'layer0-devtools-ack' event\n     *    along with the buffered messages that were received over the last BUFFER_DELAY_MS.\n     *    This is because the window widget takes time to download, load and to start listening from\n     *    Service worker message, while the latter is already receiving http requests.\n     * 3. Devtools receives the 'layer0-devtools-ack' event, looks for its current page html request,\n     *    which corresponds to that tab very first request, and loads requests past that one.\n     * 4. Devtools starts listening for live 'layer0-devtools-request' events\n     *\n     * Notes:\n     * - there is no 1-1 channel between window client and Service Worker, so all opened tab\n     *   will see the 'layer0-devtools-ack' event. Only the ones in handshake phase will handle it.\n     */\n    initDevtoolsHandshakeListener() {\n        self.addEventListener('message', async (e) => {\n            if (e.data.action === 'layer0-devtools-install') {\n                if (!this.devtoolsEnabled) {\n                    this.registerDevtoolsRoutes();\n                    this.devtoolsEnabled = true;\n                    // Devtools plugin just got initialized so we missed\n                    // a few queries. We send a message so that the browser\n                    // refreshes its page.\n                    this.sendToAllClients({\n                        type: 'layer0-devtools-ack-installed',\n                    });\n                }\n            }\n            if (e.data.action === 'layer0-devtools-syn') {\n                if (this.devtoolsEnabled) {\n                    const ackMessage = {\n                        type: 'layer0-devtools-ack',\n                        bufferedDevtoolMessages: this.bufferedDevtoolMessages,\n                    };\n                    this.sendToAllClients(ackMessage);\n                }\n            }\n            if (e.data.action === 'layer0-devtools-clear-cache') {\n                caches.keys().then(cacheNames => cacheNames.forEach(name => caches.delete(name)));\n            }\n        });\n    }\n    /**\n     * Send a postMessage event to all window client.\n     * Notes:\n     * - When used in multi-tabs, each Devtools will show data from all tabs.\n     *   That's a bit buggy but it's the best we can do as it's very hard to establish 1-1 channels\n     *   on ServiceWorker/Client interface, for example the message event from the window does not\n     *   contain the clientId\n     */\n    async sendToAllClients(data) {\n        messageBrowser_1.default(data, { broadcast: true });\n    }\n    /**\n     * Adds a message to this.bufferedDevtoolMessages and manages the buffer so that\n     * we don't keep messages more than BUFFER_DELAY_MS.\n     *\n     * In case of inactivity we clear the whole buffer after BUFFER_DELAY_MS, so technically\n     * a message can stay up to 2 x BUFFER_DELAY_MS in the buffer (a bit less than BUFFER_DELAY_MS old\n     * when the latest message arrives and cleared BUFFER_DELAY_MS later)\n     * @param message\n     */\n    addDevtoolsRequestMessageToBuffer(message) {\n        this.bufferedDevtoolMessages.push(message);\n        this.trimDevtoolsRequestMessageBuffer();\n        if (this.clearDevtoolsRequestMessageTimeout) {\n            clearTimeout(this.clearDevtoolsRequestMessageTimeout);\n        }\n        // If no additional request for BUFFER_DELAY_MS, we clear the buffer after that\n        this.clearDevtoolsRequestMessageTimeout = setTimeout(() => {\n            this.bufferedDevtoolMessages = [];\n        }, BUFFER_DELAY_MS);\n    }\n    /**\n     * Remove message that are too old to stay in devtools message buffer\n     */\n    trimDevtoolsRequestMessageBuffer() {\n        let sliceIndex = 0;\n        const sliceMinimumTimestamp = Date.now() - BUFFER_DELAY_MS;\n        while (this.bufferedDevtoolMessages[sliceIndex] &&\n            this.bufferedDevtoolMessages[sliceIndex].timestamp < sliceMinimumTimestamp) {\n            sliceIndex++;\n        }\n        this.bufferedDevtoolMessages = this.bufferedDevtoolMessages.slice(sliceIndex);\n    }\n    /**\n     * If there's a cacheHost configured check whether the pattern to test\n     * against is a partial pathname pattern. If so, check that the origin is\n     * also correct: service worker's own origin or cacheHost origin\n     * @param pattern A route pattern\n     * @param isPartialPathRoute Set to true if the supplied pattern only matches the path, false if it matches the whole URL.\n     * @param options.skipAssets Set to true to ignore request that are not 'document' or 'empty' (ie: audio, font, image, ...)\n     * @return true if the request should be handled by the service worker.\n     */\n    shouldIntercept(pattern, isPartialPathRoute, { skipAssets = false } = {}) {\n        return ({ url, request }) => {\n            if (skipAssets && !['document', 'empty'].includes(request.destination))\n                return false;\n            if (isPartialPathRoute) {\n                return this.cacheOrigins.includes(url.origin) && pattern.test(url.pathname);\n            }\n            else {\n                return pattern.test(url.toString());\n            }\n        };\n    }\n    /**\n     * Creates a DevtoolsPlugin object to be added to a caching strategy instance\n     * @param routeConfig The route config for the given route\n     * @private\n     */\n    createDevtoolsPlugin(routeConfig) {\n        return new DevtoolsPlugin_1.default({\n            onResponse: this.onResponse.bind(this),\n            isEnabledFn: () => this.devtoolsEnabled,\n            routeConfig,\n        });\n    }\n    /**\n     * Creates a Workbox route which only purpose is to forward requests/response\n     * data to the Devtools\n     * @param routeConfig The route pattern and caching options specified within the route definition\n     *                    If undefined, it catches all GET queries except static assets\n     */\n    createDevtoolsRoute(routeConfig) {\n        let method, routeMatcher;\n        if (routeConfig) {\n            const { pattern, isPartialPathRoute } = routeConfig;\n            const patternRegexp = new RegExp(pattern, 'i');\n            routeMatcher = this.shouldIntercept(patternRegexp, isPartialPathRoute, { skipAssets: true });\n            method = (routeConfig.method || 'get').toUpperCase();\n        }\n        else {\n            routeMatcher = this.shouldIntercept(/^.*$/, true, { skipAssets: true });\n            method = 'GET';\n        }\n        workbox_routing_1.registerRoute(routeMatcher, new workbox_strategies_1.NetworkOnly({\n            plugins: [this.createDevtoolsPlugin(routeConfig)],\n        }), \n        // @ts-ignore\n        method);\n    }\n    /**\n     * Creates a workbox route.\n     * @param routeConfig The route pattern and caching options specified within the route definition\n     */\n    createRoute(routeConfig) {\n        const { pattern, method: optMethod, maxAgeSeconds, isPartialPathRoute, key, convertToGet, } = routeConfig;\n        const method = (optMethod || 'get').toLowerCase();\n        log_1.default(`[route] ${method} ${pattern}, maxAgeSeconds: ${maxAgeSeconds}`);\n        const patternRegexp = new RegExp(pattern, 'i');\n        // all routes must have a GET route registered, so Workbox can properly look\n        // it up when running workbox-routing/Router#findMatchingRoute:\n        if (method !== 'get') {\n            this.createRoute({ ...routeConfig, method: 'get' });\n        }\n        const prefetchPlugin = new PrefetchPlugin_1.default({\n            incrementRead: this.incrementRead.bind(this),\n            incrementWrite: this.incrementWrite.bind(this),\n            cacheHost: this.cacheHost,\n            prefetchUpstreamRequests: routeConfig.prefetchUpstreamRequests,\n        });\n        const plugins = [\n            this.cacheableResponsePlugin,\n            new workbox_expiration_1.ExpirationPlugin({\n                maxAgeSeconds,\n            }),\n            // DevtoolPlugin needs to be injected before PrefetchPlugin as this later\n            // changes request url to normalise the cache key\n            this.createDevtoolsPlugin(routeConfig),\n            prefetchPlugin,\n            ...(this.config.plugins || []),\n        ];\n        if (key) {\n            plugins.push(new CustomCacheKeyPlugin_1.default(patternRegexp, key));\n        }\n        if (convertToGet) {\n            // ChangeMethodPlugin must come before PrefetchPlugin so body is retained:\n            plugins.splice(plugins.indexOf(prefetchPlugin), 0, new ChangeMethodPlugin_1.default([patternRegexp]));\n        }\n        workbox_routing_1.registerRoute(this.shouldIntercept(patternRegexp, isPartialPathRoute), new workbox_strategies_1.CacheFirst({\n            cacheName: constants_1.CACHE_NAME,\n            matchOptions: {\n                ignoreVary: true,\n            },\n            plugins,\n        }), \n        // @ts-ignore\n        method.toUpperCase() // HTTPMethods map directly from @layer0/core lowercase => @workbox uppercase\n        );\n    }\n    /**\n     * A Read is considered a Hit until a Write happens meaning it was a miss\n     * This is based on the fragile assumption that a cache read *always* triggers a write\n     * in case of cache miss, which is not true if the backend does not respond for example.\n     *\n     * This could be fixed by checking the presence of `response` in `cachedResponseWillBeUsed``\n     * but that leads to other issues as we cannot discard Prefetch requests at that\n     * stage.\n     * We could implement the same Hack-ish solution as in DevtoolsPlugin to work around that,\n     * but those simple stats are probably going away anyway.\n     */\n    incrementRead() {\n        this.stats.hits++;\n    }\n    incrementWrite() {\n        this.stats.misses++;\n        this.stats.hits--;\n    }\n    async onResponse({ request, response, ttfb, prefetch, browserCache, routeConfig, }) {\n        const headers = {};\n        response.headers.forEach((value, key) => {\n            headers[key] = value;\n        });\n        const devToolMessage = {\n            type: 'layer0-devtools-request',\n            timestamp: Date.now(),\n            request: {\n                method: request.method,\n                url: request.url,\n                prefetch,\n            },\n            response: {\n                ttfb,\n                status: response.status,\n                headers,\n            },\n            browserCache,\n            routeConfig,\n        };\n        this.sendToAllClients(devToolMessage);\n        this.addDevtoolsRequestMessageToBuffer(devToolMessage);\n    }\n}\nexports.default = Prefetcher;\n","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst PrefetchPlugin_1 = require(\"./PrefetchPlugin\");\n/**\n * Time after which we clear a given request metadata from memory.\n * This must be above usual http timeouts to be sure the request is completed.\n */\nconst CURRENT_REQUEST_MAP_CLEANUP_DELAY = 120000;\nclass DevtoolsPlugin {\n    constructor({ onResponse, routeConfig, isEnabledFn, }) {\n        this.currentRequests = {};\n        this.onResponse = onResponse;\n        this.routeConfig = routeConfig;\n        this.isEnabledFn = isEnabledFn;\n    }\n    /**\n     * Stores information about a request to be used by subsequent plugin steps\n     *\n     * IMPORTANT We do **not** use a custom header to store the metadata: a custom header leads\n     * to CORS pre-flight requests when using cache on a different origin, and those would likely\n     * reject our header.\n     * (more info https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Preflighted_requests)\n     *\n     * Unfortunately, there does not seem to be another way to (or if there is, feel free to fix this):\n     * - store information on the request instance that we be passed along to subsequent steps\n     * - identify a request uniquely with some sort of internal id\n     *\n     * For now, the solution is to use the normalized cache key to identify each request \"uniquely\",\n     * although that would lead to inconsistent results if a same request happens multiple time concurrently.\n     * It also adds overhead, especially for POST graphql query which serializes the body.\n     *\n     * After CURRENT_REQUEST_MAP_CLEANUP_DELAY, the metadata is cleared to avoid a memory leak.\n     * We don't clear explicitly from cachedResponseWillBeUsed/fetchDidSucceed, as it very complex (impossible?) to do it right:\n     * - we would need a counter on the current requests to be sure to not clear the metadata from concurrent equivalent request\n     * - incrementing/decrementing because we don't know in advance through which\n     *   plugin functions the request will go through, which is the first and which\n     *   is the last. We could make assumptions but that would lead to fragility.\n     */\n    async saveRequestMetadata(request, metadata) {\n        var _a, _b;\n        const normalizedUrl = await PrefetchPlugin_1.normalizeRequestUrlForCache(request);\n        if ((_a = this.currentRequests[normalizedUrl]) === null || _a === void 0 ? void 0 : _a.cleanupTimeout) {\n            clearTimeout(this.currentRequests[normalizedUrl].cleanupTimeout);\n        }\n        this.currentRequests[normalizedUrl] = {\n            metadata: {\n                ...(_b = this.currentRequests[normalizedUrl]) === null || _b === void 0 ? void 0 : _b.metadata,\n                ...metadata,\n            },\n            cleanupTimeout: setTimeout(() => {\n                delete this.currentRequests[normalizedUrl];\n            }, CURRENT_REQUEST_MAP_CLEANUP_DELAY),\n        };\n    }\n    async getRequestMetadata(request) {\n        var _a;\n        const normalizedUrl = await PrefetchPlugin_1.normalizeRequestUrlForCache(request);\n        return ((_a = this.currentRequests[normalizedUrl]) === null || _a === void 0 ? void 0 : _a.metadata) || {};\n    }\n    /**\n     * Notes:\n     * - It seems that we cannot add arbitrary attributes to the request object\n     *   so the best we can do is to store request info in a memory hash-map\n     */\n    async requestWillFetch({ request }) {\n        if (!this.isEnabledFn()) {\n            return request;\n        }\n        await this.saveRequestMetadata(request, { requestStart: Date.now() });\n        return request;\n    }\n    /**\n     * Called when an object is read from or written to the cache.\n     *\n     * Notes:\n     * - It seems that we cannot add arbitrary attributes to the request object\n     *   so the best we can do is to store request info in a memory hash-map\n     *\n     * - In case of cache 'read', we keep track of prefetch request so that we can identify them later\n     *   in `cachedResponseWillBeUsed`, which is called for both hit or miss.\n     *   Why here and not on response? Because in `cachedResponseWillBeUsed` we only get the cache-normalized request\n     *   where layer0_dt_pf query string got removed\n     */\n    async cacheKeyWillBeUsed({ request, mode }) {\n        if (!this.isEnabledFn()) {\n            return request;\n        }\n        if (mode === 'read') {\n            await this.saveRequestMetadata(request, {\n                isPrefetch: PrefetchPlugin_1.isPrefetchRequest(request),\n            });\n        }\n        return request;\n    }\n    async cachedResponseWillBeUsed({ request, cachedResponse: response, }) {\n        if (!this.isEnabledFn()) {\n            return response;\n        }\n        // In case of cache miss\n        if (!response)\n            return response;\n        const { isPrefetch } = await this.getRequestMetadata(request);\n        // TTFB is hard-coded to 0 for cached response\n        this.onResponse({\n            browserCache: 'hit',\n            ttfb: 0,\n            prefetch: isPrefetch,\n            request,\n            response,\n            routeConfig: this.routeConfig,\n        });\n        return response;\n    }\n    async fetchDidSucceed({ request, response }) {\n        if (!this.isEnabledFn()) {\n            return response;\n        }\n        const { requestStart } = await this.getRequestMetadata(request);\n        const ttfb = requestStart && Date.now() - requestStart;\n        this.onResponse({\n            browserCache: 'miss',\n            ttfb,\n            prefetch: PrefetchPlugin_1.isPrefetchRequest(request),\n            request,\n            response,\n            routeConfig: this.routeConfig,\n        });\n        return response;\n    }\n}\nexports.default = DevtoolsPlugin;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst CustomCacheKey_1 = require(\"@layer0/core/router/CustomCacheKey\");\nconst constants_1 = require(\"@layer0/core/constants\");\nclass CustomCacheKeyPlugin {\n    constructor(urls, config) {\n        this.route = urls;\n        this.config = config;\n    }\n    urlMatches(url) {\n        return this.route.test(url);\n    }\n    async cacheKeyWillBeUsed({ request }) {\n        const url = new URL(request.url);\n        if (this.urlMatches(url.pathname)) {\n            const url = new URL(request.url);\n            this.config.forEach(conf => this.handleKeyConfig(url, conf));\n            return url.toString();\n        }\n        return request;\n    }\n    handleKeyConfig(url, config) {\n        const deleteKeys = [];\n        switch (config.action) {\n            case CustomCacheKey_1.CUSTOM_CACHE_KEY_ACTIONS.blacklistAll:\n                url.searchParams.forEach((value, key) => {\n                    deleteKeys.push(key);\n                });\n                break;\n            case CustomCacheKey_1.CUSTOM_CACHE_KEY_ACTIONS.blacklistSome:\n                url.searchParams.forEach((value, key) => {\n                    if (config.names && config.names.includes(key)) {\n                        deleteKeys.push(key);\n                    }\n                });\n                break;\n            case CustomCacheKey_1.CUSTOM_CACHE_KEY_ACTIONS.whitelistSome:\n                url.searchParams.forEach((value, key) => {\n                    if (config.names && !config.names.includes(key)) {\n                        deleteKeys.push(key);\n                    }\n                });\n                break;\n            case CustomCacheKey_1.CUSTOM_CACHE_KEY_ACTIONS.removeBody:\n                url.searchParams.delete(constants_1.POST_BODY_QUERY_PARAM);\n                break;\n            case CustomCacheKey_1.CUSTOM_CACHE_KEY_ACTIONS.removeMethod:\n                url.searchParams.delete(constants_1.METHOD_QUERY_PARAM);\n                break;\n        }\n        deleteKeys.forEach(key => url.searchParams.delete(key));\n    }\n}\nexports.default = CustomCacheKeyPlugin;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Groups_1 = __importDefault(require(\"./Groups\"));\nconst cookie_1 = require(\"cookie\");\nexports.CUSTOM_CACHE_KEY_ACTIONS = {\n    blacklistAll: 'blacklist-all-query-parameters',\n    blacklistSome: 'blacklist-some-query-parameters',\n    whitelistSome: 'whitelist-some-query-parameters',\n    addValue: 'add-value',\n    removeMethod: 'remove-method',\n    removeBody: 'remove-body',\n};\n/**\n * Allows you to split or normalize the cache space for a given route. Common use cases include:\n *\n * - serving multiple variants of the same URL based on a currency and/or language cookie.\n * - caching different responses based on device type\n * - ignoring all but a specific set of query parameters when looking up a response from the cache.\n *\n * **Example**\n *\n * ```js\n *  import { Router, CustomCacheKey } from '@layer0/core/router'\n *\n *  new Router()\n *    .match('/some-path', ({ cache }) => {\n *      cache({\n *        key: new CustomCacheKey()\n *          .excludeAllQueryParametersExcept('color', 'size')\n *          .addCookie('currency')\n *          .addCookie('location', cookie => {\n *            cookie.group('na').byPattern('us|ca')\n *            cookie.group('eur').byPattern('de|fr|ee')\n *          }),\n *        edge: {\n *          maxAgeSeconds: 60 * 60\n *        }\n *      })\n *    })\n * ```\n */\nclass CustomCacheKey {\n    constructor() {\n        this.config = [];\n        this.actions = [];\n    }\n    /**\n     * Creates a copy of the cache key.\n     */\n    clone() {\n        const newKey = new CustomCacheKey();\n        newKey.actions = this.actions;\n        newKey.config = this.config;\n        return newKey;\n    }\n    /**\n     * Excludes the entire query string from the cache key.\n     * @return {CustomCacheKey} A self-reference, suitable for chaining.\n     */\n    excludeAllQueryParameters() {\n        this.config.push({ action: exports.CUSTOM_CACHE_KEY_ACTIONS.blacklistAll });\n        this.actions.push((key, srcRequest) => {\n            key.query = {};\n        });\n        return this;\n    }\n    /**\n     * Excludes the provided query parameters from the cache key.  All other parameters\n     * will still be part of the cache key. We also refer to this as \"blacklisting\" query parameters.\n     * @param names The names of the query parameters to blacklist\n     * @return {CustomCacheKey} A self-reference, suitable for chaining.\n     */\n    excludeQueryParameters(...names) {\n        this.config.push({\n            action: exports.CUSTOM_CACHE_KEY_ACTIONS.blacklistSome,\n            names,\n        });\n        this.actions.push((key, srcRequest) => {\n            for (let name of names) {\n                delete key.query[name];\n            }\n        });\n        return this;\n    }\n    /**\n     * Excludes all query parameters except those provided from the cache key.  We also refer to\n     * this as \"whitelisting\" query parameters.  We recommend using this method over `excludeQueryParameters`\n     * as it's difficult to know all of the query parameters your application might receive and unexpected\n     * query parameters can lead to significantly lower cache hit rates.\n     * @param names The names of the query parameters to whitelist\n     * @return {CustomCacheKey} A self-reference, suitable for chaining.\n     */\n    excludeAllQueryParametersExcept(...names) {\n        this.config.push({\n            action: exports.CUSTOM_CACHE_KEY_ACTIONS.whitelistSome,\n            names,\n        });\n        this.actions.push((key, srcRequest) => {\n            const toKeep = new Set(names);\n            for (let name in key.query) {\n                if (!toKeep.has(name)) {\n                    delete key.query[name];\n                }\n            }\n        });\n        return this;\n    }\n    /**\n     * Adds a request header to the cache key.\n     * This will have no effect on service worker cache.\n     * @param name The name of the request header\n     * @param createGroups A function that accepts a `Groups` instance and calls `groups.group(name)` to group multiple values into a single cache key component\n     * @return {CustomCacheKey} A self-reference, suitable for chaining.\n     */\n    addHeader(name, createGroups) {\n        this.actions.push((key, srcRequest) => {\n            let values = srcRequest.headers[name];\n            if (!Array.isArray(values)) {\n                values = [values];\n            }\n            if (createGroups) {\n                key.headers[name] = this.createGroupedValue(createGroups, values);\n            }\n            else {\n                key.headers[name] = values;\n            }\n        });\n        return this.addValue(`\\${req:${name}}`, createGroups);\n    }\n    /**\n     * Removes the HTTP method from the cache key.\n     * @return A self-reference, suitable for chaining.\n     */\n    removeMethod() {\n        this.actions.push((key, srcRequest) => {\n            key.method = undefined;\n        });\n        this.config.push({\n            action: exports.CUSTOM_CACHE_KEY_ACTIONS.removeMethod,\n        });\n        return this;\n    }\n    /**\n     * Removes the HTTP body from the cache key.\n     * @return A self-reference, suitable for chaining.\n     */\n    removeBody() {\n        this.actions.push((key, srcRequest) => {\n            key.body = undefined;\n        });\n        this.config.push({\n            action: exports.CUSTOM_CACHE_KEY_ACTIONS.removeBody,\n        });\n        return this;\n    }\n    /**\n     * Creates a key value for a header or cookie based on the specified group creator\n     * @param createGroups the GroupCreator\n     * @param srcValues The values of the header or cookie in the request\n     */\n    createGroupedValue(createGroups, srcValues) {\n        const groups = new Groups_1.default();\n        const result = [];\n        createGroups(groups);\n        const matchingGroup = this.findMatchingGroup(groups, srcValues);\n        if (matchingGroup) {\n            result.push(matchingGroup);\n        }\n        else {\n            // if the value doesn't match any group, use the value itself\n            result.push(...srcValues);\n        }\n        return result;\n    }\n    findMatchingGroup(groups, srcValues) {\n        var _a;\n        for (let group of groups.groups) {\n            for (let value of srcValues) {\n                /* istanbul ignore next */\n                if ((_a = group.pattern) === null || _a === void 0 ? void 0 : _a.test(value)) {\n                    return group.name;\n                }\n            }\n        }\n    }\n    /**\n     * Specifies that requests should be cached on a per-device basis.\n     * This will have no effect on service worker cache.\n     * @return {CustomCacheKey} A self-reference, suitable for chaining.\n     */\n    addDevice() {\n        return this.addHeader('x-0-device');\n    }\n    /**\n     * Specifies that requests should be cached on a per-vendor basis.\n     * This will have no effect on service worker cache.\n     * @return {CustomCacheKey} A self-reference, suitable for chaining.\n     */\n    addVendor() {\n        return this.addHeader('x-0-vendor');\n    }\n    /**\n     * Specifies that requests should be cached differently for bots.\n     * This will have no effect on service worker cache.\n     * @return {CustomCacheKey} A self-reference, suitable for chaining.\n     */\n    addIsBot() {\n        return this.addHeader('x-0-device-is-bot');\n    }\n    /**\n     * Specifies that requests should be cached on a per-browser basis.\n     * This will have no effect on service worker cache.\n     * @return {CustomCacheKey} A self-reference, suitable for chaining.\n     */\n    addBrowser() {\n        return this.addHeader('x-0-browser');\n    }\n    /**\n     * Adds a cookie to the cache key.\n     * This will have no effect on service worker cache.\n     * @param name The name of the cookie\n     * @param createGroups An function that accepts a `Groups` instance and calls `groups.group(name)` to group multiple values into a single cache key component\n     * @return {CustomCacheKey} A self-reference, suitable for chaining.\n     */\n    addCookie(name, createGroups) {\n        this.actions.push((key, srcRequest) => {\n            let cookieHeader = srcRequest.headers.cookie || '';\n            if (Array.isArray(cookieHeader)) {\n                // Based on https://tools.ietf.org/html/rfc6265#section-5.4 we should only get a single cookie header\n                // If we get more than one, we, just join them into a single parseable cookie value in case\n                // the origin decides to read them all\n                cookieHeader = cookieHeader.join(';');\n            }\n            const cookie = cookie_1.parse(cookieHeader);\n            const value = cookie[name];\n            if (createGroups) {\n                key.cookies[name] = this.createGroupedValue(createGroups, [value]);\n            }\n            else {\n                key.cookies[name] = value;\n            }\n        });\n        return this.addValue(`\\${req:cookie:${name}}`, createGroups);\n    }\n    /**\n     * @private\n     * @return {CustomCacheKey} A self-reference, suitable for chaining.\n     */\n    addValue(value, createGroups) {\n        const action = {\n            action: exports.CUSTOM_CACHE_KEY_ACTIONS.addValue,\n            value,\n        };\n        if (createGroups != null) {\n            const groups = new Groups_1.default();\n            createGroups(groups);\n            action.groups = groups.toJSON();\n        }\n        this.config.push(action);\n        return this;\n    }\n    getActions() {\n        return this.actions;\n    }\n    toJSON() {\n        return this.config;\n    }\n}\nexports.default = CustomCacheKey;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst GroupConfig_1 = __importDefault(require(\"./GroupConfig\"));\nclass Groups {\n    constructor() {\n        this.groups = [];\n        this.name = null;\n    }\n    group(name) {\n        const group = new GroupConfig_1.default(name);\n        this.groups.push(group);\n        return group;\n    }\n    toJSON() {\n        return this.groups.map(p => p.toJSON());\n    }\n}\nexports.default = Groups;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass GroupConfig {\n    constructor(name) {\n        this.name = name;\n    }\n    byPattern(pattern) {\n        this.pattern = pattern;\n    }\n    toJSON() {\n        if (!this.pattern) {\n            throw new Error('byPattern is required for group ' + this.name);\n        }\n        return {\n            groupedValue: this.name,\n            matchRegex: this.pattern.source,\n        };\n    }\n}\nexports.default = GroupConfig;\n","/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar decode = decodeURIComponent;\nvar encode = encodeURIComponent;\nvar pairSplitRegExp = /; */;\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {}\n  var opt = options || {};\n  var pairs = str.split(pairSplitRegExp);\n  var dec = opt.decode || decode;\n\n  for (var i = 0; i < pairs.length; i++) {\n    var pair = pairs[i];\n    var eq_idx = pair.indexOf('=');\n\n    // skip things that don't look like key=value\n    if (eq_idx < 0) {\n      continue;\n    }\n\n    var key = pair.substr(0, eq_idx).trim()\n    var val = pair.substr(++eq_idx, pair.length).trim();\n\n    // quoted values\n    if ('\"' == val[0]) {\n      val = val.slice(1, -1);\n    }\n\n    // only assign once\n    if (undefined == obj[key]) {\n      obj[key] = tryDecode(val, dec);\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n\n    if (isNaN(maxAge) || !isFinite(maxAge)) {\n      throw new TypeError('option maxAge is invalid')\n    }\n\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    if (typeof opt.expires.toUTCString !== 'function') {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + opt.expires.toUTCString();\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string'\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      case 'none':\n        str += '; SameSite=None';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"@layer0/core/constants\");\n/**\n * Workbox only allows GET requests to be cached out-of-the-box, so this plugin\n * allows for changing the method of a request so that it can be cached.\n */\nclass ChangeMethodPlugin {\n    constructor(urls) {\n        this.urls = urls;\n    }\n    urlMatches(url) {\n        return this.urls.some(testUrl => testUrl.test(url));\n    }\n    /**\n     * Workbox requires cache keys to be GET method, so this forces the method when it is determined\n     * that the cache key will be used.\n     * If the request has a body, the body will be added to the URL for the cache key\n     * using the POST_BODY_QUERY_PARAM.\n     */\n    async cacheKeyWillBeUsed({ request }) {\n        const url = new URL(request.url);\n        if (this.urlMatches(url.pathname)) {\n            let body = await request.clone().text();\n            const bodyParam = url.searchParams.get(constants_1.POST_BODY_QUERY_PARAM);\n            if (!bodyParam && body) {\n                url.searchParams.set(constants_1.POST_BODY_QUERY_PARAM, encodeURIComponent(body));\n            }\n        }\n        return url.toString();\n    }\n    /**\n     *\n     */\n    async requestWillFetch({ request }) {\n        const url = new URL(request.url);\n        if (this.urlMatches(url.pathname) && request.method.toUpperCase() !== 'GET') {\n            // if the request is not a GET, then it's ok to modify the request and bump\n            // the priority since this means it is the real (non-prefetch) request (a\n            // prefetch request will not come in as anything but a GET)\n            const headers = new Headers(request.headers);\n            let body = await request.clone().text();\n            url.searchParams.set(constants_1.POST_BODY_QUERY_PARAM, body);\n            return new Request(url.toString(), {\n                method: 'get',\n                headers,\n                redirect: request.redirect,\n            });\n        }\n        return request;\n    }\n}\nexports.default = ChangeMethodPlugin;\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nlet supportStatus;\n/**\n * A utility function that determines whether the current browser supports\n * constructing a new `Response` from a `response.body` stream.\n *\n * @return {boolean} `true`, if the current browser can successfully\n *     construct a `Response` from a `response.body` stream, `false` otherwise.\n *\n * @private\n */\nfunction canConstructResponseFromBodyStream() {\n    if (supportStatus === undefined) {\n        const testResponse = new Response('');\n        if ('body' in testResponse) {\n            try {\n                new Response(testResponse.body);\n                supportStatus = true;\n            }\n            catch (error) {\n                supportStatus = false;\n            }\n        }\n        supportStatus = false;\n    }\n    return supportStatus;\n}\nexport { canConstructResponseFromBodyStream };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { canConstructResponseFromBodyStream } from './_private/canConstructResponseFromBodyStream.js';\nimport './_version.js';\n/**\n * Allows developers to copy a response and modify its `headers`, `status`,\n * or `statusText` values (the values settable via a\n * [`ResponseInit`]{@link https://developer.mozilla.org/en-US/docs/Web/API/Response/Response#Syntax}\n * object in the constructor).\n * To modify these values, pass a function as the second argument. That\n * function will be invoked with a single object with the response properties\n * `{headers, status, statusText}`. The return value of this function will\n * be used as the `ResponseInit` for the new `Response`. To change the values\n * either modify the passed parameter(s) and return it, or return a totally\n * new object.\n *\n * @param {Response} response\n * @param {Function} modifier\n * @memberof module:workbox-core\n */\nasync function copyResponse(response, modifier) {\n    const clonedResponse = response.clone();\n    // Create a fresh `ResponseInit` object by cloning the headers.\n    const responseInit = {\n        headers: new Headers(clonedResponse.headers),\n        status: clonedResponse.status,\n        statusText: clonedResponse.statusText,\n    };\n    // Apply any user modifications.\n    const modifiedResponseInit = modifier ? modifier(responseInit) : responseInit;\n    // Create the new response from the body stream and `ResponseInit`\n    // modifications. Note: not all browsers support the Response.body stream,\n    // so fall back to reading the entire body into memory as a blob.\n    const body = canConstructResponseFromBodyStream() ?\n        clonedResponse.body : await clonedResponse.blob();\n    return new Response(body, modifiedResponseInit);\n}\nexport { copyResponse };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst plugins = [];\nexport const precachePlugins = {\n    /*\n     * @return {Array}\n     * @private\n     */\n    get() {\n        return plugins;\n    },\n    /*\n     * @param {Array} newPlugins\n     * @private\n     */\n    add(newPlugins) {\n        plugins.push(...newPlugins);\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport '../_version.js';\n// Name of the search parameter used to store revision info.\nconst REVISION_SEARCH_PARAM = '__WB_REVISION__';\n/**\n * Converts a manifest entry into a versioned URL suitable for precaching.\n *\n * @param {Object|string} entry\n * @return {string} A URL with versioning info.\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function createCacheKey(entry) {\n    if (!entry) {\n        throw new WorkboxError('add-to-cache-list-unexpected-type', { entry });\n    }\n    // If a precache manifest entry is a string, it's assumed to be a versioned\n    // URL, like '/app.abcd1234.js'. Return as-is.\n    if (typeof entry === 'string') {\n        const urlObject = new URL(entry, location.href);\n        return {\n            cacheKey: urlObject.href,\n            url: urlObject.href,\n        };\n    }\n    const { revision, url } = entry;\n    if (!url) {\n        throw new WorkboxError('add-to-cache-list-unexpected-type', { entry });\n    }\n    // If there's just a URL and no revision, then it's also assumed to be a\n    // versioned URL.\n    if (!revision) {\n        const urlObject = new URL(url, location.href);\n        return {\n            cacheKey: urlObject.href,\n            url: urlObject.href,\n        };\n    }\n    // Otherwise, construct a properly versioned URL using the custom Workbox\n    // search parameter along with the revision info.\n    const cacheKeyURL = new URL(url, location.href);\n    const originalURL = new URL(url, location.href);\n    cacheKeyURL.searchParams.set(REVISION_SEARCH_PARAM, revision);\n    return {\n        cacheKey: cacheKeyURL.href,\n        url: originalURL.href,\n    };\n}\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { PrecacheController } from '../PrecacheController.js';\nimport '../_version.js';\nlet precacheController;\n/**\n * @return {PrecacheController}\n * @private\n */\nexport const getOrCreatePrecacheController = () => {\n    if (!precacheController) {\n        precacheController = new PrecacheController();\n    }\n    return precacheController;\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { cacheWrapper } from 'workbox-core/_private/cacheWrapper.js';\nimport { fetchWrapper } from 'workbox-core/_private/fetchWrapper.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { copyResponse } from 'workbox-core/copyResponse.js';\nimport { createCacheKey } from './utils/createCacheKey.js';\nimport { printCleanupDetails } from './utils/printCleanupDetails.js';\nimport { printInstallDetails } from './utils/printInstallDetails.js';\nimport './_version.js';\n/**\n * Performs efficient precaching of assets.\n *\n * @memberof module:workbox-precaching\n */\nclass PrecacheController {\n    /**\n     * Create a new PrecacheController.\n     *\n     * @param {string} [cacheName] An optional name for the cache, to override\n     * the default precache name.\n     */\n    constructor(cacheName) {\n        this._cacheName = cacheNames.getPrecacheName(cacheName);\n        this._urlsToCacheKeys = new Map();\n        this._urlsToCacheModes = new Map();\n        this._cacheKeysToIntegrities = new Map();\n    }\n    /**\n     * This method will add items to the precache list, removing duplicates\n     * and ensuring the information is valid.\n     *\n     * @param {\n     * Array<module:workbox-precaching.PrecacheController.PrecacheEntry|string>\n     * } entries Array of entries to precache.\n     */\n    addToCacheList(entries) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isArray(entries, {\n                moduleName: 'workbox-precaching',\n                className: 'PrecacheController',\n                funcName: 'addToCacheList',\n                paramName: 'entries',\n            });\n        }\n        const urlsToWarnAbout = [];\n        for (const entry of entries) {\n            // See https://github.com/GoogleChrome/workbox/issues/2259\n            if (typeof entry === 'string') {\n                urlsToWarnAbout.push(entry);\n            }\n            else if (entry && entry.revision === undefined) {\n                urlsToWarnAbout.push(entry.url);\n            }\n            const { cacheKey, url } = createCacheKey(entry);\n            const cacheMode = (typeof entry !== 'string' && entry.revision) ?\n                'reload' : 'default';\n            if (this._urlsToCacheKeys.has(url) &&\n                this._urlsToCacheKeys.get(url) !== cacheKey) {\n                throw new WorkboxError('add-to-cache-list-conflicting-entries', {\n                    firstEntry: this._urlsToCacheKeys.get(url),\n                    secondEntry: cacheKey,\n                });\n            }\n            if (typeof entry !== 'string' && entry.integrity) {\n                if (this._cacheKeysToIntegrities.has(cacheKey) &&\n                    this._cacheKeysToIntegrities.get(cacheKey) !== entry.integrity) {\n                    throw new WorkboxError('add-to-cache-list-conflicting-integrities', {\n                        url,\n                    });\n                }\n                this._cacheKeysToIntegrities.set(cacheKey, entry.integrity);\n            }\n            this._urlsToCacheKeys.set(url, cacheKey);\n            this._urlsToCacheModes.set(url, cacheMode);\n            if (urlsToWarnAbout.length > 0) {\n                const warningMessage = `Workbox is precaching URLs without revision ` +\n                    `info: ${urlsToWarnAbout.join(', ')}\\nThis is generally NOT safe. ` +\n                    `Learn more at https://bit.ly/wb-precache`;\n                if (process.env.NODE_ENV === 'production') {\n                    // Use console directly to display this warning without bloating\n                    // bundle sizes by pulling in all of the logger codebase in prod.\n                    console.warn(warningMessage);\n                }\n                else {\n                    logger.warn(warningMessage);\n                }\n            }\n        }\n    }\n    /**\n     * Precaches new and updated assets. Call this method from the service worker\n     * install event.\n     *\n     * @param {Object} options\n     * @param {Event} [options.event] The install event (if needed).\n     * @param {Array<Object>} [options.plugins] Plugins to be used for fetching\n     * and caching during install.\n     * @return {Promise<module:workbox-precaching.InstallResult>}\n     */\n    async install({ event, plugins } = {}) {\n        if (process.env.NODE_ENV !== 'production') {\n            if (plugins) {\n                assert.isArray(plugins, {\n                    moduleName: 'workbox-precaching',\n                    className: 'PrecacheController',\n                    funcName: 'install',\n                    paramName: 'plugins',\n                });\n            }\n        }\n        const toBePrecached = [];\n        const alreadyPrecached = [];\n        const cache = await self.caches.open(this._cacheName);\n        const alreadyCachedRequests = await cache.keys();\n        const existingCacheKeys = new Set(alreadyCachedRequests.map((request) => request.url));\n        for (const [url, cacheKey] of this._urlsToCacheKeys) {\n            if (existingCacheKeys.has(cacheKey)) {\n                alreadyPrecached.push(url);\n            }\n            else {\n                toBePrecached.push({ cacheKey, url });\n            }\n        }\n        const precacheRequests = toBePrecached.map(({ cacheKey, url }) => {\n            const integrity = this._cacheKeysToIntegrities.get(cacheKey);\n            const cacheMode = this._urlsToCacheModes.get(url);\n            return this._addURLToCache({\n                cacheKey,\n                cacheMode,\n                event,\n                integrity,\n                plugins,\n                url,\n            });\n        });\n        await Promise.all(precacheRequests);\n        const updatedURLs = toBePrecached.map((item) => item.url);\n        if (process.env.NODE_ENV !== 'production') {\n            printInstallDetails(updatedURLs, alreadyPrecached);\n        }\n        return {\n            updatedURLs,\n            notUpdatedURLs: alreadyPrecached,\n        };\n    }\n    /**\n     * Deletes assets that are no longer present in the current precache manifest.\n     * Call this method from the service worker activate event.\n     *\n     * @return {Promise<module:workbox-precaching.CleanupResult>}\n     */\n    async activate() {\n        const cache = await self.caches.open(this._cacheName);\n        const currentlyCachedRequests = await cache.keys();\n        const expectedCacheKeys = new Set(this._urlsToCacheKeys.values());\n        const deletedURLs = [];\n        for (const request of currentlyCachedRequests) {\n            if (!expectedCacheKeys.has(request.url)) {\n                await cache.delete(request);\n                deletedURLs.push(request.url);\n            }\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            printCleanupDetails(deletedURLs);\n        }\n        return { deletedURLs };\n    }\n    /**\n     * Requests the entry and saves it to the cache if the response is valid.\n     * By default, any response with a status code of less than 400 (including\n     * opaque responses) is considered valid.\n     *\n     * If you need to use custom criteria to determine what's valid and what\n     * isn't, then pass in an item in `options.plugins` that implements the\n     * `cacheWillUpdate()` lifecycle event.\n     *\n     * @private\n     * @param {Object} options\n     * @param {string} options.cacheKey The string to use a cache key.\n     * @param {string} options.url The URL to fetch and cache.\n     * @param {string} [options.cacheMode] The cache mode for the network request.\n     * @param {Event} [options.event] The install event (if passed).\n     * @param {Array<Object>} [options.plugins] An array of plugins to apply to\n     * fetch and caching.\n     * @param {string} [options.integrity] The value to use for the `integrity`\n     * field when making the request.\n     */\n    async _addURLToCache({ cacheKey, url, cacheMode, event, plugins, integrity }) {\n        const request = new Request(url, {\n            integrity,\n            cache: cacheMode,\n            credentials: 'same-origin',\n        });\n        let response = await fetchWrapper.fetch({\n            event,\n            plugins,\n            request,\n        });\n        // Allow developers to override the default logic about what is and isn't\n        // valid by passing in a plugin implementing cacheWillUpdate(), e.g.\n        // a `CacheableResponsePlugin` instance.\n        let cacheWillUpdatePlugin;\n        for (const plugin of (plugins || [])) {\n            if ('cacheWillUpdate' in plugin) {\n                cacheWillUpdatePlugin = plugin;\n            }\n        }\n        const isValidResponse = cacheWillUpdatePlugin ?\n            // Use a callback if provided. It returns a truthy value if valid.\n            // NOTE: invoke the method on the plugin instance so the `this` context\n            // is correct.\n            await cacheWillUpdatePlugin.cacheWillUpdate({ event, request, response }) :\n            // Otherwise, default to considering any response status under 400 valid.\n            // This includes, by default, considering opaque responses valid.\n            response.status < 400;\n        // Consider this a failure, leading to the `install` handler failing, if\n        // we get back an invalid response.\n        if (!isValidResponse) {\n            throw new WorkboxError('bad-precaching-response', {\n                url,\n                status: response.status,\n            });\n        }\n        // Redirected responses cannot be used to satisfy a navigation request, so\n        // any redirected response must be \"copied\" rather than cloned, so the new\n        // response doesn't contain the `redirected` flag. See:\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=669363&desc=2#c1\n        if (response.redirected) {\n            response = await copyResponse(response);\n        }\n        await cacheWrapper.put({\n            event,\n            plugins,\n            response,\n            // `request` already uses `url`. We may be able to reuse it.\n            request: cacheKey === url ? request : new Request(cacheKey),\n            cacheName: this._cacheName,\n            matchOptions: {\n                ignoreSearch: true,\n            },\n        });\n    }\n    /**\n     * Returns a mapping of a precached URL to the corresponding cache key, taking\n     * into account the revision information for the URL.\n     *\n     * @return {Map<string, string>} A URL to cache key mapping.\n     */\n    getURLsToCacheKeys() {\n        return this._urlsToCacheKeys;\n    }\n    /**\n     * Returns a list of all the URLs that have been precached by the current\n     * service worker.\n     *\n     * @return {Array<string>} The precached URLs.\n     */\n    getCachedURLs() {\n        return [...this._urlsToCacheKeys.keys()];\n    }\n    /**\n     * Returns the cache key used for storing a given URL. If that URL is\n     * unversioned, like `/index.html', then the cache key will be the original\n     * URL with a search parameter appended to it.\n     *\n     * @param {string} url A URL whose cache key you want to look up.\n     * @return {string} The versioned URL that corresponds to a cache key\n     * for the original URL, or undefined if that URL isn't precached.\n     */\n    getCacheKeyForURL(url) {\n        const urlObject = new URL(url, location.href);\n        return this._urlsToCacheKeys.get(urlObject.href);\n    }\n    /**\n     * This acts as a drop-in replacement for [`cache.match()`](https://developer.mozilla.org/en-US/docs/Web/API/Cache/match)\n     * with the following differences:\n     *\n     * - It knows what the name of the precache is, and only checks in that cache.\n     * - It allows you to pass in an \"original\" URL without versioning parameters,\n     * and it will automatically look up the correct cache key for the currently\n     * active revision of that URL.\n     *\n     * E.g., `matchPrecache('index.html')` will find the correct precached\n     * response for the currently active service worker, even if the actual cache\n     * key is `'/index.html?__WB_REVISION__=1234abcd'`.\n     *\n     * @param {string|Request} request The key (without revisioning parameters)\n     * to look up in the precache.\n     * @return {Promise<Response|undefined>}\n     */\n    async matchPrecache(request) {\n        const url = request instanceof Request ? request.url : request;\n        const cacheKey = this.getCacheKeyForURL(url);\n        if (cacheKey) {\n            const cache = await self.caches.open(this._cacheName);\n            return cache.match(cacheKey);\n        }\n        return undefined;\n    }\n    /**\n     * Returns a function that can be used within a\n     * {@link module:workbox-routing.Route} that will find a response for the\n     * incoming request against the precache.\n     *\n     * If for an unexpected reason there is a cache miss for the request,\n     * this will fall back to retrieving the `Response` via `fetch()` when\n     * `fallbackToNetwork` is `true`.\n     *\n     * @param {boolean} [fallbackToNetwork=true] Whether to attempt to get the\n     * response from the network if there's a precache miss.\n     * @return {module:workbox-routing~handlerCallback}\n     */\n    createHandler(fallbackToNetwork = true) {\n        return async ({ request }) => {\n            try {\n                const response = await this.matchPrecache(request);\n                if (response) {\n                    return response;\n                }\n                // This shouldn't normally happen, but there are edge cases:\n                // https://github.com/GoogleChrome/workbox/issues/1441\n                throw new WorkboxError('missing-precache-entry', {\n                    cacheName: this._cacheName,\n                    url: request instanceof Request ? request.url : request,\n                });\n            }\n            catch (error) {\n                if (fallbackToNetwork) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        logger.debug(`Unable to respond with precached response. ` +\n                            `Falling back to network.`, error);\n                    }\n                    return fetch(request);\n                }\n                throw error;\n            }\n        };\n    }\n    /**\n     * Returns a function that looks up `url` in the precache (taking into\n     * account revision information), and returns the corresponding `Response`.\n     *\n     * If for an unexpected reason there is a cache miss when looking up `url`,\n     * this will fall back to retrieving the `Response` via `fetch()` when\n     * `fallbackToNetwork` is `true`.\n     *\n     * @param {string} url The precached URL which will be used to lookup the\n     * `Response`.\n     * @param {boolean} [fallbackToNetwork=true] Whether to attempt to get the\n     * response from the network if there's a precache miss.\n     * @return {module:workbox-routing~handlerCallback}\n     */\n    createHandlerBoundToURL(url, fallbackToNetwork = true) {\n        const cacheKey = this.getCacheKeyForURL(url);\n        if (!cacheKey) {\n            throw new WorkboxError('non-precached-url', { url });\n        }\n        const handler = this.createHandler(fallbackToNetwork);\n        const request = new Request(url);\n        return () => handler({ request });\n    }\n}\nexport { PrecacheController };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Removes any URL search parameters that should be ignored.\n *\n * @param {URL} urlObject The original URL.\n * @param {Array<RegExp>} ignoreURLParametersMatching RegExps to test against\n * each search parameter name. Matches mean that the search parameter should be\n * ignored.\n * @return {URL} The URL with any ignored search parameters removed.\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function removeIgnoredSearchParams(urlObject, ignoreURLParametersMatching = []) {\n    // Convert the iterable into an array at the start of the loop to make sure\n    // deletion doesn't mess up iteration.\n    for (const paramName of [...urlObject.searchParams.keys()]) {\n        if (ignoreURLParametersMatching.some((regExp) => regExp.test(paramName))) {\n            urlObject.searchParams.delete(paramName);\n        }\n    }\n    return urlObject;\n}\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { removeIgnoredSearchParams } from './removeIgnoredSearchParams.js';\nimport '../_version.js';\n/**\n * Generator function that yields possible variations on the original URL to\n * check, one at a time.\n *\n * @param {string} url\n * @param {Object} options\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function* generateURLVariations(url, { ignoreURLParametersMatching, directoryIndex, cleanURLs, urlManipulation, } = {}) {\n    const urlObject = new URL(url, location.href);\n    urlObject.hash = '';\n    yield urlObject.href;\n    const urlWithoutIgnoredParams = removeIgnoredSearchParams(urlObject, ignoreURLParametersMatching);\n    yield urlWithoutIgnoredParams.href;\n    if (directoryIndex && urlWithoutIgnoredParams.pathname.endsWith('/')) {\n        const directoryURL = new URL(urlWithoutIgnoredParams.href);\n        directoryURL.pathname += directoryIndex;\n        yield directoryURL.href;\n    }\n    if (cleanURLs) {\n        const cleanURL = new URL(urlWithoutIgnoredParams.href);\n        cleanURL.pathname += '.html';\n        yield cleanURL.href;\n    }\n    if (urlManipulation) {\n        const additionalURLs = urlManipulation({ url: urlObject });\n        for (const urlToAttempt of additionalURLs) {\n            yield urlToAttempt.href;\n        }\n    }\n}\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './getOrCreatePrecacheController.js';\nimport { generateURLVariations } from './generateURLVariations.js';\nimport '../_version.js';\n/**\n * This function will take the request URL and manipulate it based on the\n * configuration options.\n *\n * @param {string} url\n * @param {Object} options\n * @return {string} Returns the URL in the cache that matches the request,\n * if possible.\n *\n * @private\n */\nexport const getCacheKeyForURL = (url, options) => {\n    const precacheController = getOrCreatePrecacheController();\n    const urlsToCacheKeys = precacheController.getURLsToCacheKeys();\n    for (const possibleURL of generateURLVariations(url, options)) {\n        const possibleCacheKey = urlsToCacheKeys.get(possibleURL);\n        if (possibleCacheKey) {\n            return possibleCacheKey;\n        }\n    }\n};\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { addFetchListener } from './utils/addFetchListener.js';\nimport './_version.js';\nlet listenerAdded = false;\n/**\n * Add a `fetch` listener to the service worker that will\n * respond to\n * [network requests]{@link https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers#Custom_responses_to_requests}\n * with precached assets.\n *\n * Requests for assets that aren't precached, the `FetchEvent` will not be\n * responded to, allowing the event to fall through to other `fetch` event\n * listeners.\n *\n * @param {Object} [options]\n * @param {string} [options.directoryIndex=index.html] The `directoryIndex` will\n * check cache entries for a URLs ending with '/' to see if there is a hit when\n * appending the `directoryIndex` value.\n * @param {Array<RegExp>} [options.ignoreURLParametersMatching=[/^utm_/]] An\n * array of regex's to remove search params when looking for a cache match.\n * @param {boolean} [options.cleanURLs=true] The `cleanURLs` option will\n * check the cache for the URL with a `.html` added to the end of the end.\n * @param {module:workbox-precaching~urlManipulation} [options.urlManipulation]\n * This is a function that should take a URL and return an array of\n * alternative URLs that should be checked for precache matches.\n *\n * @memberof module:workbox-precaching\n */\nfunction addRoute(options) {\n    if (!listenerAdded) {\n        addFetchListener(options);\n        listenerAdded = true;\n    }\n}\nexport { addRoute };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getCacheKeyForURL } from './getCacheKeyForURL.js';\nimport '../_version.js';\n/**\n * Adds a `fetch` listener to the service worker that will\n * respond to\n * [network requests]{@link https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers#Custom_responses_to_requests}\n * with precached assets.\n *\n * Requests for assets that aren't precached, the `FetchEvent` will not be\n * responded to, allowing the event to fall through to other `fetch` event\n * listeners.\n *\n * NOTE: when called more than once this method will replace the previously set\n * configuration options. Calling it more than once is not recommended outside\n * of tests.\n *\n * @private\n * @param {Object} [options]\n * @param {string} [options.directoryIndex=index.html] The `directoryIndex` will\n * check cache entries for a URLs ending with '/' to see if there is a hit when\n * appending the `directoryIndex` value.\n * @param {Array<RegExp>} [options.ignoreURLParametersMatching=[/^utm_/]] An\n * array of regex's to remove search params when looking for a cache match.\n * @param {boolean} [options.cleanURLs=true] The `cleanURLs` option will\n * check the cache for the URL with a `.html` added to the end of the end.\n * @param {workbox.precaching~urlManipulation} [options.urlManipulation]\n * This is a function that should take a URL and return an array of\n * alternative URLs that should be checked for precache matches.\n */\nexport const addFetchListener = ({ ignoreURLParametersMatching = [/^utm_/], directoryIndex = 'index.html', cleanURLs = true, urlManipulation, } = {}) => {\n    const cacheName = cacheNames.getPrecacheName();\n    // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n    self.addEventListener('fetch', ((event) => {\n        const precachedURL = getCacheKeyForURL(event.request.url, {\n            cleanURLs,\n            directoryIndex,\n            ignoreURLParametersMatching,\n            urlManipulation,\n        });\n        if (!precachedURL) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Precaching did not find a match for ` +\n                    getFriendlyURL(event.request.url));\n            }\n            return;\n        }\n        let responsePromise = self.caches.open(cacheName).then((cache) => {\n            return cache.match(precachedURL);\n        }).then((cachedResponse) => {\n            if (cachedResponse) {\n                return cachedResponse;\n            }\n            // Fall back to the network if we don't have a cached response\n            // (perhaps due to manual cache cleanup).\n            if (process.env.NODE_ENV !== 'production') {\n                logger.warn(`The precached response for ` +\n                    `${getFriendlyURL(precachedURL)} in ${cacheName} was not found. ` +\n                    `Falling back to the network instead.`);\n            }\n            return fetch(precachedURL);\n        });\n        if (process.env.NODE_ENV !== 'production') {\n            responsePromise = responsePromise.then((response) => {\n                // Workbox is going to handle the route.\n                // print the routing details to the console.\n                logger.groupCollapsed(`Precaching is responding to: ` +\n                    getFriendlyURL(event.request.url));\n                logger.log(`Serving the precached url: ${precachedURL}`);\n                logger.groupCollapsed(`View request details here.`);\n                logger.log(event.request);\n                logger.groupEnd();\n                logger.groupCollapsed(`View response details here.`);\n                logger.log(response);\n                logger.groupEnd();\n                logger.groupEnd();\n                return response;\n            });\n        }\n        event.respondWith(responsePromise);\n    }));\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport { precachePlugins } from './utils/precachePlugins.js';\nimport './_version.js';\nconst installListener = (event) => {\n    const precacheController = getOrCreatePrecacheController();\n    const plugins = precachePlugins.get();\n    event.waitUntil(precacheController.install({ event, plugins })\n        .catch((error) => {\n        if (process.env.NODE_ENV !== 'production') {\n            logger.error(`Service worker installation failed. It will ` +\n                `be retried automatically during the next navigation.`);\n        }\n        // Re-throw the error to ensure installation fails.\n        throw error;\n    }));\n};\nconst activateListener = (event) => {\n    const precacheController = getOrCreatePrecacheController();\n    event.waitUntil(precacheController.activate());\n};\n/**\n * Adds items to the precache list, removing any duplicates and\n * stores the files in the\n * [\"precache cache\"]{@link module:workbox-core.cacheNames} when the service\n * worker installs.\n *\n * This method can be called multiple times.\n *\n * Please note: This method **will not** serve any of the cached files for you.\n * It only precaches files. To respond to a network request you call\n * [addRoute()]{@link module:workbox-precaching.addRoute}.\n *\n * If you have a single array of files to precache, you can just call\n * [precacheAndRoute()]{@link module:workbox-precaching.precacheAndRoute}.\n *\n * @param {Array<Object|string>} [entries=[]] Array of entries to precache.\n *\n * @memberof module:workbox-precaching\n */\nfunction precache(entries) {\n    const precacheController = getOrCreatePrecacheController();\n    precacheController.addToCacheList(entries);\n    if (entries.length > 0) {\n        // NOTE: these listeners will only be added once (even if the `precache()`\n        // method is called multiple times) because event listeners are implemented\n        // as a set, where each listener must be unique.\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('install', installListener);\n        self.addEventListener('activate', activateListener);\n    }\n}\nexport { precache };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { addRoute } from './addRoute.js';\nimport { precache } from './precache.js';\nimport './_version.js';\n/**\n * This method will add entries to the precache list and add a route to\n * respond to fetch events.\n *\n * This is a convenience method that will call\n * [precache()]{@link module:workbox-precaching.precache} and\n * [addRoute()]{@link module:workbox-precaching.addRoute} in a single call.\n *\n * @param {Array<Object|string>} entries Array of entries to precache.\n * @param {Object} [options] See\n * [addRoute() options]{@link module:workbox-precaching.addRoute}.\n *\n * @memberof module:workbox-precaching\n */\nfunction precacheAndRoute(entries, options) {\n    precache(entries);\n    addRoute(options);\n}\nexport { precacheAndRoute };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport './_version.js';\n/**\n * Force a service worker to activate immediately, instead of\n * [waiting](https://developers.google.com/web/fundamentals/primers/service-workers/lifecycle#waiting)\n * for existing clients to close.\n *\n * @memberof module:workbox-core\n */\nfunction skipWaiting() {\n    // We need to explicitly call `self.skipWaiting()` here because we're\n    // shadowing `skipWaiting` with this local function.\n    self.addEventListener('install', () => self.skipWaiting());\n}\nexport { skipWaiting };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport './_version.js';\n/**\n * Claim any currently available clients once the service worker\n * becomes active. This is normally used in conjunction with `skipWaiting()`.\n *\n * @memberof module:workbox-core\n */\nfunction clientsClaim() {\n    self.addEventListener('activate', () => self.clients.claim());\n}\nexport { clientsClaim };\n","import { skipWaiting, clientsClaim } from 'workbox-core'\nimport { precacheAndRoute } from 'workbox-precaching'\nimport { Prefetcher } from '@layer0/prefetch/sw'\n\nskipWaiting()\nclientsClaim()\nprecacheAndRoute(self.__WB_MANIFEST || [])\n\nnew Prefetcher().route()","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { Router } from '../Router.js';\nimport '../_version.js';\nlet defaultRouter;\n/**\n * Creates a new, singleton Router instance if one does not exist. If one\n * does already exist, that instance is returned.\n *\n * @private\n * @return {Router}\n */\nexport const getOrCreateDefaultRouter = () => {\n    if (!defaultRouter) {\n        defaultRouter = new Router();\n        // The helpers that use the default Router assume these listeners exist.\n        defaultRouter.addFetchListener();\n        defaultRouter.addCacheListener();\n    }\n    return defaultRouter;\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport '../_version.js';\n/**\n * @param {function()|Object} handler Either a function, or an object with a\n * 'handle' method.\n * @return {Object} An object with a handle method.\n *\n * @private\n */\nexport const normalizeHandler = (handler) => {\n    if (handler && typeof handler === 'object') {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.hasMethod(handler, 'handle', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'handler',\n            });\n        }\n        return handler;\n    }\n    else {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(handler, 'function', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'handler',\n            });\n        }\n        return { handle: handler };\n    }\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { defaultMethod, validMethods } from './utils/constants.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport './_version.js';\n/**\n * A `Route` consists of a pair of callback functions, \"match\" and \"handler\".\n * The \"match\" callback determine if a route should be used to \"handle\" a\n * request by returning a non-falsy value if it can. The \"handler\" callback\n * is called when there is a match and should return a Promise that resolves\n * to a `Response`.\n *\n * @memberof module:workbox-routing\n */\nclass Route {\n    /**\n     * Constructor for Route class.\n     *\n     * @param {module:workbox-routing~matchCallback} match\n     * A callback function that determines whether the route matches a given\n     * `fetch` event by returning a non-falsy value.\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resolving to a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(match, handler, method = defaultMethod) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(match, 'function', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'match',\n            });\n            if (method) {\n                assert.isOneOf(method, validMethods, { paramName: 'method' });\n            }\n        }\n        // These values are referenced directly by Router so cannot be\n        // altered by minificaton.\n        this.handler = normalizeHandler(handler);\n        this.match = match;\n        this.method = method;\n    }\n}\nexport { Route };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * The default HTTP method, 'GET', used when there's no specific method\n * configured for a route.\n *\n * @type {string}\n *\n * @private\n */\nexport const defaultMethod = 'GET';\n/**\n * The list of valid HTTP methods associated with requests that could be routed.\n *\n * @type {Array<string>}\n *\n * @private\n */\nexport const validMethods = [\n    'DELETE',\n    'GET',\n    'HEAD',\n    'PATCH',\n    'POST',\n    'PUT',\n];\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { Route } from './Route.js';\nimport './_version.js';\n/**\n * NavigationRoute makes it easy to create a\n * [Route]{@link module:workbox-routing.Route} that matches for browser\n * [navigation requests]{@link https://developers.google.com/web/fundamentals/primers/service-workers/high-performance-loading#first_what_are_navigation_requests}.\n *\n * It will only match incoming Requests whose\n * [`mode`]{@link https://fetch.spec.whatwg.org/#concept-request-mode}\n * is set to `navigate`.\n *\n * You can optionally only apply this route to a subset of navigation requests\n * by using one or both of the `denylist` and `allowlist` parameters.\n *\n * @memberof module:workbox-routing\n * @extends module:workbox-routing.Route\n */\nclass NavigationRoute extends Route {\n    /**\n     * If both `denylist` and `allowlist` are provided, the `denylist` will\n     * take precedence and the request will not match this route.\n     *\n     * The regular expressions in `allowlist` and `denylist`\n     * are matched against the concatenated\n     * [`pathname`]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/pathname}\n     * and [`search`]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/search}\n     * portions of the requested URL.\n     *\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {Object} options\n     * @param {Array<RegExp>} [options.denylist] If any of these patterns match,\n     * the route will not handle the request (even if a allowlist RegExp matches).\n     * @param {Array<RegExp>} [options.allowlist=[/./]] If any of these patterns\n     * match the URL's pathname and search parameter, the route will handle the\n     * request (assuming the denylist doesn't match).\n     */\n    constructor(handler, { allowlist = [/./], denylist = [] } = {}) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isArrayOfClass(allowlist, RegExp, {\n                moduleName: 'workbox-routing',\n                className: 'NavigationRoute',\n                funcName: 'constructor',\n                paramName: 'options.allowlist',\n            });\n            assert.isArrayOfClass(denylist, RegExp, {\n                moduleName: 'workbox-routing',\n                className: 'NavigationRoute',\n                funcName: 'constructor',\n                paramName: 'options.denylist',\n            });\n        }\n        super((options) => this._match(options), handler);\n        this._allowlist = allowlist;\n        this._denylist = denylist;\n    }\n    /**\n     * Routes match handler.\n     *\n     * @param {Object} options\n     * @param {URL} options.url\n     * @param {Request} options.request\n     * @return {boolean}\n     *\n     * @private\n     */\n    _match({ url, request }) {\n        if (request && request.mode !== 'navigate') {\n            return false;\n        }\n        const pathnameAndSearch = url.pathname + url.search;\n        for (const regExp of this._denylist) {\n            if (regExp.test(pathnameAndSearch)) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.log(`The navigation route ${pathnameAndSearch} is not ` +\n                        `being used, since the URL matches this denylist pattern: ` +\n                        `${regExp}`);\n                }\n                return false;\n            }\n        }\n        if (this._allowlist.some((regExp) => regExp.test(pathnameAndSearch))) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`The navigation route ${pathnameAndSearch} ` +\n                    `is being used.`);\n            }\n            return true;\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.log(`The navigation route ${pathnameAndSearch} is not ` +\n                `being used, since the URL being navigated to doesn't ` +\n                `match the allowlist.`);\n        }\n        return false;\n    }\n}\nexport { NavigationRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { Route } from './Route.js';\nimport './_version.js';\n/**\n * RegExpRoute makes it easy to create a regular expression based\n * [Route]{@link module:workbox-routing.Route}.\n *\n * For same-origin requests the RegExp only needs to match part of the URL. For\n * requests against third-party servers, you must define a RegExp that matches\n * the start of the URL.\n *\n * [See the module docs for info.]{@link https://developers.google.com/web/tools/workbox/modules/workbox-routing}\n *\n * @memberof module:workbox-routing\n * @extends module:workbox-routing.Route\n */\nclass RegExpRoute extends Route {\n    /**\n     * If the regular expression contains\n     * [capture groups]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#grouping-back-references},\n     * the captured values will be passed to the\n     * [handler's]{@link module:workbox-routing~handlerCallback} `params`\n     * argument.\n     *\n     * @param {RegExp} regExp The regular expression to match against URLs.\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(regExp, handler, method) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(regExp, RegExp, {\n                moduleName: 'workbox-routing',\n                className: 'RegExpRoute',\n                funcName: 'constructor',\n                paramName: 'pattern',\n            });\n        }\n        const match = ({ url }) => {\n            const result = regExp.exec(url.href);\n            // Return immediately if there's no match.\n            if (!result) {\n                return;\n            }\n            // Require that the match start at the first character in the URL string\n            // if it's a cross-origin request.\n            // See https://github.com/GoogleChrome/workbox/issues/281 for the context\n            // behind this behavior.\n            if ((url.origin !== location.origin) && (result.index !== 0)) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`The regular expression '${regExp}' only partially matched ` +\n                        `against the cross-origin URL '${url}'. RegExpRoute's will only ` +\n                        `handle cross-origin requests if they match the entire URL.`);\n                }\n                return;\n            }\n            // If the route matches, but there aren't any capture groups defined, then\n            // this will return [], which is truthy and therefore sufficient to\n            // indicate a match.\n            // If there are capture groups, then it will return their values.\n            return result.slice(1);\n        };\n        super(match, handler, method);\n    }\n}\nexport { RegExpRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport './_version.js';\n/**\n * The Router can be used to process a FetchEvent through one or more\n * [Routes]{@link module:workbox-routing.Route} responding  with a Request if\n * a matching route exists.\n *\n * If no route matches a given a request, the Router will use a \"default\"\n * handler if one is defined.\n *\n * Should the matching Route throw an error, the Router will use a \"catch\"\n * handler if one is defined to gracefully deal with issues and respond with a\n * Request.\n *\n * If a request matches multiple routes, the **earliest** registered route will\n * be used to respond to the request.\n *\n * @memberof module:workbox-routing\n */\nclass Router {\n    /**\n     * Initializes a new Router.\n     */\n    constructor() {\n        this._routes = new Map();\n    }\n    /**\n     * @return {Map<string, Array<module:workbox-routing.Route>>} routes A `Map` of HTTP\n     * method name ('GET', etc.) to an array of all the corresponding `Route`\n     * instances that are registered.\n     */\n    get routes() {\n        return this._routes;\n    }\n    /**\n     * Adds a fetch event listener to respond to events when a route matches\n     * the event's request.\n     */\n    addFetchListener() {\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('fetch', ((event) => {\n            const { request } = event;\n            const responsePromise = this.handleRequest({ request, event });\n            if (responsePromise) {\n                event.respondWith(responsePromise);\n            }\n        }));\n    }\n    /**\n     * Adds a message event listener for URLs to cache from the window.\n     * This is useful to cache resources loaded on the page prior to when the\n     * service worker started controlling it.\n     *\n     * The format of the message data sent from the window should be as follows.\n     * Where the `urlsToCache` array may consist of URL strings or an array of\n     * URL string + `requestInit` object (the same as you'd pass to `fetch()`).\n     *\n     * ```\n     * {\n     *   type: 'CACHE_URLS',\n     *   payload: {\n     *     urlsToCache: [\n     *       './script1.js',\n     *       './script2.js',\n     *       ['./script3.js', {mode: 'no-cors'}],\n     *     ],\n     *   },\n     * }\n     * ```\n     */\n    addCacheListener() {\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('message', ((event) => {\n            if (event.data && event.data.type === 'CACHE_URLS') {\n                const { payload } = event.data;\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`Caching URLs from the window`, payload.urlsToCache);\n                }\n                const requestPromises = Promise.all(payload.urlsToCache.map((entry) => {\n                    if (typeof entry === 'string') {\n                        entry = [entry];\n                    }\n                    const request = new Request(...entry);\n                    return this.handleRequest({ request });\n                    // TODO(philipwalton): TypeScript errors without this typecast for\n                    // some reason (probably a bug). The real type here should work but\n                    // doesn't: `Array<Promise<Response> | undefined>`.\n                })); // TypeScript\n                event.waitUntil(requestPromises);\n                // If a MessageChannel was used, reply to the message on success.\n                if (event.ports && event.ports[0]) {\n                    requestPromises.then(() => event.ports[0].postMessage(true));\n                }\n            }\n        }));\n    }\n    /**\n     * Apply the routing rules to a FetchEvent object to get a Response from an\n     * appropriate Route's handler.\n     *\n     * @param {Object} options\n     * @param {Request} options.request The request to handle (this is usually\n     *     from a fetch event, but it does not have to be).\n     * @param {FetchEvent} [options.event] The event that triggered the request,\n     *     if applicable.\n     * @return {Promise<Response>|undefined} A promise is returned if a\n     *     registered route can handle the request. If there is no matching\n     *     route and there's no `defaultHandler`, `undefined` is returned.\n     */\n    handleRequest({ request, event }) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'handleRequest',\n                paramName: 'options.request',\n            });\n        }\n        const url = new URL(request.url, location.href);\n        if (!url.protocol.startsWith('http')) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Workbox Router only supports URLs that start with 'http'.`);\n            }\n            return;\n        }\n        const { params, route } = this.findMatchingRoute({ url, request, event });\n        let handler = route && route.handler;\n        const debugMessages = [];\n        if (process.env.NODE_ENV !== 'production') {\n            if (handler) {\n                debugMessages.push([\n                    `Found a route to handle this request:`, route,\n                ]);\n                if (params) {\n                    debugMessages.push([\n                        `Passing the following params to the route's handler:`, params,\n                    ]);\n                }\n            }\n        }\n        // If we don't have a handler because there was no matching route, then\n        // fall back to defaultHandler if that's defined.\n        if (!handler && this._defaultHandler) {\n            if (process.env.NODE_ENV !== 'production') {\n                debugMessages.push(`Failed to find a matching route. Falling ` +\n                    `back to the default handler.`);\n            }\n            handler = this._defaultHandler;\n        }\n        if (!handler) {\n            if (process.env.NODE_ENV !== 'production') {\n                // No handler so Workbox will do nothing. If logs is set of debug\n                // i.e. verbose, we should print out this information.\n                logger.debug(`No route found for: ${getFriendlyURL(url)}`);\n            }\n            return;\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            // We have a handler, meaning Workbox is going to handle the route.\n            // print the routing details to the console.\n            logger.groupCollapsed(`Router is responding to: ${getFriendlyURL(url)}`);\n            debugMessages.forEach((msg) => {\n                if (Array.isArray(msg)) {\n                    logger.log(...msg);\n                }\n                else {\n                    logger.log(msg);\n                }\n            });\n            logger.groupEnd();\n        }\n        // Wrap in try and catch in case the handle method throws a synchronous\n        // error. It should still callback to the catch handler.\n        let responsePromise;\n        try {\n            responsePromise = handler.handle({ url, request, event, params });\n        }\n        catch (err) {\n            responsePromise = Promise.reject(err);\n        }\n        if (responsePromise instanceof Promise && this._catchHandler) {\n            responsePromise = responsePromise.catch((err) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    // Still include URL here as it will be async from the console group\n                    // and may not make sense without the URL\n                    logger.groupCollapsed(`Error thrown when responding to: ` +\n                        ` ${getFriendlyURL(url)}. Falling back to Catch Handler.`);\n                    logger.error(`Error thrown by:`, route);\n                    logger.error(err);\n                    logger.groupEnd();\n                }\n                return this._catchHandler.handle({ url, request, event });\n            });\n        }\n        return responsePromise;\n    }\n    /**\n     * Checks a request and URL (and optionally an event) against the list of\n     * registered routes, and if there's a match, returns the corresponding\n     * route along with any params generated by the match.\n     *\n     * @param {Object} options\n     * @param {URL} options.url\n     * @param {Request} options.request The request to match.\n     * @param {Event} [options.event] The corresponding event (unless N/A).\n     * @return {Object} An object with `route` and `params` properties.\n     *     They are populated if a matching route was found or `undefined`\n     *     otherwise.\n     */\n    findMatchingRoute({ url, request, event }) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(url, URL, {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'findMatchingRoute',\n                paramName: 'options.url',\n            });\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'findMatchingRoute',\n                paramName: 'options.request',\n            });\n        }\n        const routes = this._routes.get(request.method) || [];\n        for (const route of routes) {\n            let params;\n            const matchResult = route.match({ url, request, event });\n            if (matchResult) {\n                // See https://github.com/GoogleChrome/workbox/issues/2079\n                params = matchResult;\n                if (Array.isArray(matchResult) && matchResult.length === 0) {\n                    // Instead of passing an empty array in as params, use undefined.\n                    params = undefined;\n                }\n                else if ((matchResult.constructor === Object &&\n                    Object.keys(matchResult).length === 0)) {\n                    // Instead of passing an empty object in as params, use undefined.\n                    params = undefined;\n                }\n                else if (typeof matchResult === 'boolean') {\n                    // For the boolean value true (rather than just something truth-y),\n                    // don't set params.\n                    // See https://github.com/GoogleChrome/workbox/pull/2134#issuecomment-513924353\n                    params = undefined;\n                }\n                // Return early if have a match.\n                return { route, params };\n            }\n        }\n        // If no match was found above, return and empty object.\n        return {};\n    }\n    /**\n     * Define a default `handler` that's called when no routes explicitly\n     * match the incoming request.\n     *\n     * Without a default handler, unmatched requests will go against the\n     * network as if there were no service worker present.\n     *\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     */\n    setDefaultHandler(handler) {\n        this._defaultHandler = normalizeHandler(handler);\n    }\n    /**\n     * If a Route throws an error while handling a request, this `handler`\n     * will be called and given a chance to provide a response.\n     *\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     */\n    setCatchHandler(handler) {\n        this._catchHandler = normalizeHandler(handler);\n    }\n    /**\n     * Registers a route with the router.\n     *\n     * @param {module:workbox-routing.Route} route The route to register.\n     */\n    registerRoute(route) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(route, 'object', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.hasMethod(route, 'match', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.isType(route.handler, 'object', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.hasMethod(route.handler, 'handle', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route.handler',\n            });\n            assert.isType(route.method, 'string', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route.method',\n            });\n        }\n        if (!this._routes.has(route.method)) {\n            this._routes.set(route.method, []);\n        }\n        // Give precedence to all of the earlier routes by adding this additional\n        // route to the end of the array.\n        this._routes.get(route.method).push(route);\n    }\n    /**\n     * Unregisters a route with the router.\n     *\n     * @param {module:workbox-routing.Route} route The route to unregister.\n     */\n    unregisterRoute(route) {\n        if (!this._routes.has(route.method)) {\n            throw new WorkboxError('unregister-route-but-not-found-with-method', {\n                method: route.method,\n            });\n        }\n        const routeIndex = this._routes.get(route.method).indexOf(route);\n        if (routeIndex > -1) {\n            this._routes.get(route.method).splice(routeIndex, 1);\n        }\n        else {\n            throw new WorkboxError('unregister-route-route-not-registered');\n        }\n    }\n}\nexport { Router };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Route } from './Route.js';\nimport { RegExpRoute } from './RegExpRoute.js';\nimport { getOrCreateDefaultRouter } from './utils/getOrCreateDefaultRouter.js';\nimport './_version.js';\n/**\n * Easily register a RegExp, string, or function with a caching\n * strategy to a singleton Router instance.\n *\n * This method will generate a Route for you if needed and\n * call [registerRoute()]{@link module:workbox-routing.Router#registerRoute}.\n *\n * @param {RegExp|string|module:workbox-routing.Route~matchCallback|module:workbox-routing.Route} capture\n * If the capture param is a `Route`, all other arguments will be ignored.\n * @param {module:workbox-routing~handlerCallback} [handler] A callback\n * function that returns a Promise resulting in a Response. This parameter\n * is required if `capture` is not a `Route` object.\n * @param {string} [method='GET'] The HTTP method to match the Route\n * against.\n * @return {module:workbox-routing.Route} The generated `Route`(Useful for\n * unregistering).\n *\n * @memberof module:workbox-routing\n */\nfunction registerRoute(capture, handler, method) {\n    let route;\n    if (typeof capture === 'string') {\n        const captureUrl = new URL(capture, location.href);\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(capture.startsWith('/') || capture.startsWith('http'))) {\n                throw new WorkboxError('invalid-string', {\n                    moduleName: 'workbox-routing',\n                    funcName: 'registerRoute',\n                    paramName: 'capture',\n                });\n            }\n            // We want to check if Express-style wildcards are in the pathname only.\n            // TODO: Remove this log message in v4.\n            const valueToCheck = capture.startsWith('http') ?\n                captureUrl.pathname : capture;\n            // See https://github.com/pillarjs/path-to-regexp#parameters\n            const wildcards = '[*:?+]';\n            if ((new RegExp(`${wildcards}`)).exec(valueToCheck)) {\n                logger.debug(`The '$capture' parameter contains an Express-style wildcard ` +\n                    `character (${wildcards}). Strings are now always interpreted as ` +\n                    `exact matches; use a RegExp for partial or wildcard matches.`);\n            }\n        }\n        const matchCallback = ({ url }) => {\n            if (process.env.NODE_ENV !== 'production') {\n                if ((url.pathname === captureUrl.pathname) &&\n                    (url.origin !== captureUrl.origin)) {\n                    logger.debug(`${capture} only partially matches the cross-origin URL ` +\n                        `${url}. This route will only handle cross-origin requests ` +\n                        `if they match the entire URL.`);\n                }\n            }\n            return url.href === captureUrl.href;\n        };\n        // If `capture` is a string then `handler` and `method` must be present.\n        route = new Route(matchCallback, handler, method);\n    }\n    else if (capture instanceof RegExp) {\n        // If `capture` is a `RegExp` then `handler` and `method` must be present.\n        route = new RegExpRoute(capture, handler, method);\n    }\n    else if (typeof capture === 'function') {\n        // If `capture` is a function then `handler` and `method` must be present.\n        route = new Route(capture, handler, method);\n    }\n    else if (capture instanceof Route) {\n        route = capture;\n    }\n    else {\n        throw new WorkboxError('unsupported-route-type', {\n            moduleName: 'workbox-routing',\n            funcName: 'registerRoute',\n            paramName: 'capture',\n        });\n    }\n    const defaultRouter = getOrCreateDefaultRouter();\n    defaultRouter.registerRoute(route);\n    return route;\n}\nexport { registerRoute };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreateDefaultRouter } from './utils/getOrCreateDefaultRouter.js';\nimport './_version.js';\n/**\n * If a Route throws an error while handling a request, this `handler`\n * will be called and given a chance to provide a response.\n *\n * @param {module:workbox-routing~handlerCallback} handler A callback\n * function that returns a Promise resulting in a Response.\n *\n * @memberof module:workbox-routing\n */\nfunction setCatchHandler(handler) {\n    const defaultRouter = getOrCreateDefaultRouter();\n    defaultRouter.setCatchHandler(handler);\n}\nexport { setCatchHandler };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreateDefaultRouter } from './utils/getOrCreateDefaultRouter.js';\nimport './_version.js';\n/**\n * Define a default `handler` that's called when no routes explicitly\n * match the incoming request.\n *\n * Without a default handler, unmatched requests will go against the\n * network as if there were no service worker present.\n *\n * @param {module:workbox-routing~handlerCallback} handler A callback\n * function that returns a Promise resulting in a Response.\n *\n * @memberof module:workbox-routing\n */\nfunction setDefaultHandler(handler) {\n    const defaultRouter = getOrCreateDefaultRouter();\n    defaultRouter.setDefaultHandler(handler);\n}\nexport { setDefaultHandler };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { cacheWrapper } from 'workbox-core/_private/cacheWrapper.js';\nimport { fetchWrapper } from 'workbox-core/_private/fetchWrapper.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a [cache-first]{@link https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#cache-falling-back-to-network}\n * request strategy.\n *\n * A cache first strategy is useful for assets that have been revisioned,\n * such as URLs like `/styles/example.a8f5f1.css`, since they\n * can be cached for long periods of time.\n *\n * If the network request fails, and there is no cache match, this will throw\n * a `WorkboxError` exception.\n *\n * @memberof module:workbox-strategies\n */\nclass CacheFirst {\n    /**\n     * @param {Object} options\n     * @param {string} options.cacheName Cache name to store and retrieve\n     * requests. Defaults to cache names provided by\n     * [workbox-core]{@link module:workbox-core.cacheNames}.\n     * @param {Array<Object>} options.plugins [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} options.fetchOptions Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of all fetch() requests made by this strategy.\n     * @param {Object} options.matchOptions [`CacheQueryOptions`](https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions)\n     */\n    constructor(options = {}) {\n        this._cacheName = cacheNames.getRuntimeName(options.cacheName);\n        this._plugins = options.plugins || [];\n        this._fetchOptions = options.fetchOptions;\n        this._matchOptions = options.matchOptions;\n    }\n    /**\n     * This method will perform a request strategy and follows an API that\n     * will work with the\n     * [Workbox Router]{@link module:workbox-routing.Router}.\n     *\n     * @param {Object} options\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {Event} [options.event] The event that triggered the request.\n     * @return {Promise<Response>}\n     */\n    async handle({ event, request }) {\n        const logs = [];\n        if (typeof request === 'string') {\n            request = new Request(request);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: 'CacheFirst',\n                funcName: 'makeRequest',\n                paramName: 'request',\n            });\n        }\n        let response = await cacheWrapper.match({\n            cacheName: this._cacheName,\n            request,\n            event,\n            matchOptions: this._matchOptions,\n            plugins: this._plugins,\n        });\n        let error;\n        if (!response) {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`No response found in the '${this._cacheName}' cache. ` +\n                    `Will respond with a network request.`);\n            }\n            try {\n                response = await this._getFromNetwork(request, event);\n            }\n            catch (err) {\n                error = err;\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                if (response) {\n                    logs.push(`Got response from network.`);\n                }\n                else {\n                    logs.push(`Unable to get a response from the network.`);\n                }\n            }\n        }\n        else {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`Found a cached response in the '${this._cacheName}' cache.`);\n            }\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart('CacheFirst', request));\n            for (const log of logs) {\n                logger.log(log);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url, error });\n        }\n        return response;\n    }\n    /**\n     * Handles the network and cache part of CacheFirst.\n     *\n     * @param {Request} request\n     * @param {Event} [event]\n     * @return {Promise<Response>}\n     *\n     * @private\n     */\n    async _getFromNetwork(request, event) {\n        const response = await fetchWrapper.fetch({\n            request,\n            event,\n            fetchOptions: this._fetchOptions,\n            plugins: this._plugins,\n        });\n        // Keep the service worker while we put the request to the cache\n        const responseClone = response.clone();\n        const cachePutPromise = cacheWrapper.put({\n            cacheName: this._cacheName,\n            request,\n            response: responseClone,\n            event,\n            plugins: this._plugins,\n        });\n        if (event) {\n            try {\n                event.waitUntil(cachePutPromise);\n            }\n            catch (error) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.warn(`Unable to ensure service worker stays alive when ` +\n                        `updating cache for '${getFriendlyURL(request.url)}'.`);\n                }\n            }\n        }\n        return response;\n    }\n}\nexport { CacheFirst };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { cacheWrapper } from 'workbox-core/_private/cacheWrapper.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a\n * [cache-only]{@link https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#cache-only}\n * request strategy.\n *\n * This class is useful if you want to take advantage of any\n * [Workbox plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}.\n *\n * If there is no cache match, this will throw a `WorkboxError` exception.\n *\n * @memberof module:workbox-strategies\n */\nclass CacheOnly {\n    /**\n     * @param {Object} options\n     * @param {string} options.cacheName Cache name to store and retrieve\n     * requests. Defaults to cache names provided by\n     * [workbox-core]{@link module:workbox-core.cacheNames}.\n     * @param {Array<Object>} options.plugins [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} options.matchOptions [`CacheQueryOptions`](https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions)\n     */\n    constructor(options = {}) {\n        this._cacheName = cacheNames.getRuntimeName(options.cacheName);\n        this._plugins = options.plugins || [];\n        this._matchOptions = options.matchOptions;\n    }\n    /**\n     * This method will perform a request strategy and follows an API that\n     * will work with the\n     * [Workbox Router]{@link module:workbox-routing.Router}.\n     *\n     * @param {Object} options\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {Event} [options.event] The event that triggered the request.\n     * @return {Promise<Response>}\n     */\n    async handle({ event, request }) {\n        if (typeof request === 'string') {\n            request = new Request(request);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: 'CacheOnly',\n                funcName: 'makeRequest',\n                paramName: 'request',\n            });\n        }\n        const response = await cacheWrapper.match({\n            cacheName: this._cacheName,\n            request,\n            event,\n            matchOptions: this._matchOptions,\n            plugins: this._plugins,\n        });\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart('CacheOnly', request));\n            if (response) {\n                logger.log(`Found a cached response in the '${this._cacheName}'` +\n                    ` cache.`);\n                messages.printFinalResponse(response);\n            }\n            else {\n                logger.log(`No response found in the '${this._cacheName}' cache.`);\n            }\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url });\n        }\n        return response;\n    }\n}\nexport { CacheOnly };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nexport const cacheOkAndOpaquePlugin = {\n    /**\n     * Returns a valid response (to allow caching) if the status is 200 (OK) or\n     * 0 (opaque).\n     *\n     * @param {Object} options\n     * @param {Response} options.response\n     * @return {Response|null}\n     *\n     * @private\n     */\n    cacheWillUpdate: async ({ response }) => {\n        if (response.status === 200 || response.status === 0) {\n            return response;\n        }\n        return null;\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { cacheWrapper } from 'workbox-core/_private/cacheWrapper.js';\nimport { fetchWrapper } from 'workbox-core/_private/fetchWrapper.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { messages } from './utils/messages.js';\nimport { cacheOkAndOpaquePlugin } from './plugins/cacheOkAndOpaquePlugin.js';\nimport './_version.js';\n/**\n * An implementation of a\n * [network first]{@link https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#network-falling-back-to-cache}\n * request strategy.\n *\n * By default, this strategy will cache responses with a 200 status code as\n * well as [opaque responses]{@link https://developers.google.com/web/tools/workbox/guides/handle-third-party-requests}.\n * Opaque responses are are cross-origin requests where the response doesn't\n * support [CORS]{@link https://enable-cors.org/}.\n *\n * If the network request fails, and there is no cache match, this will throw\n * a `WorkboxError` exception.\n *\n * @memberof module:workbox-strategies\n */\nclass NetworkFirst {\n    /**\n     * @param {Object} options\n     * @param {string} options.cacheName Cache name to store and retrieve\n     * requests. Defaults to cache names provided by\n     * [workbox-core]{@link module:workbox-core.cacheNames}.\n     * @param {Array<Object>} options.plugins [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} options.fetchOptions Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of all fetch() requests made by this strategy.\n     * @param {Object} options.matchOptions [`CacheQueryOptions`](https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions)\n     * @param {number} options.networkTimeoutSeconds If set, any network requests\n     * that fail to respond within the timeout will fallback to the cache.\n     *\n     * This option can be used to combat\n     * \"[lie-fi]{@link https://developers.google.com/web/fundamentals/performance/poor-connectivity/#lie-fi}\"\n     * scenarios.\n     */\n    constructor(options = {}) {\n        this._cacheName = cacheNames.getRuntimeName(options.cacheName);\n        if (options.plugins) {\n            const isUsingCacheWillUpdate = options.plugins.some((plugin) => !!plugin.cacheWillUpdate);\n            this._plugins = isUsingCacheWillUpdate ?\n                options.plugins : [cacheOkAndOpaquePlugin, ...options.plugins];\n        }\n        else {\n            // No plugins passed in, use the default plugin.\n            this._plugins = [cacheOkAndOpaquePlugin];\n        }\n        this._networkTimeoutSeconds = options.networkTimeoutSeconds || 0;\n        if (process.env.NODE_ENV !== 'production') {\n            if (this._networkTimeoutSeconds) {\n                assert.isType(this._networkTimeoutSeconds, 'number', {\n                    moduleName: 'workbox-strategies',\n                    className: 'NetworkFirst',\n                    funcName: 'constructor',\n                    paramName: 'networkTimeoutSeconds',\n                });\n            }\n        }\n        this._fetchOptions = options.fetchOptions;\n        this._matchOptions = options.matchOptions;\n    }\n    /**\n     * This method will perform a request strategy and follows an API that\n     * will work with the\n     * [Workbox Router]{@link module:workbox-routing.Router}.\n     *\n     * @param {Object} options\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {Event} [options.event] The event that triggered the request.\n     * @return {Promise<Response>}\n     */\n    async handle({ event, request }) {\n        const logs = [];\n        if (typeof request === 'string') {\n            request = new Request(request);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: 'NetworkFirst',\n                funcName: 'handle',\n                paramName: 'makeRequest',\n            });\n        }\n        const promises = [];\n        let timeoutId;\n        if (this._networkTimeoutSeconds) {\n            const { id, promise } = this._getTimeoutPromise({ request, event, logs });\n            timeoutId = id;\n            promises.push(promise);\n        }\n        const networkPromise = this._getNetworkPromise({ timeoutId, request, event, logs });\n        promises.push(networkPromise);\n        // Promise.race() will resolve as soon as the first promise resolves.\n        let response = await Promise.race(promises);\n        // If Promise.race() resolved with null, it might be due to a network\n        // timeout + a cache miss. If that were to happen, we'd rather wait until\n        // the networkPromise resolves instead of returning null.\n        // Note that it's fine to await an already-resolved promise, so we don't\n        // have to check to see if it's still \"in flight\".\n        if (!response) {\n            response = await networkPromise;\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart('NetworkFirst', request));\n            for (const log of logs) {\n                logger.log(log);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url });\n        }\n        return response;\n    }\n    /**\n     * @param {Object} options\n     * @param {Request} options.request\n     * @param {Array} options.logs A reference to the logs array\n     * @param {Event} [options.event]\n     * @return {Promise<Response>}\n     *\n     * @private\n     */\n    _getTimeoutPromise({ request, logs, event }) {\n        let timeoutId;\n        const timeoutPromise = new Promise((resolve) => {\n            const onNetworkTimeout = async () => {\n                if (process.env.NODE_ENV !== 'production') {\n                    logs.push(`Timing out the network response at ` +\n                        `${this._networkTimeoutSeconds} seconds.`);\n                }\n                resolve(await this._respondFromCache({ request, event }));\n            };\n            timeoutId = setTimeout(onNetworkTimeout, this._networkTimeoutSeconds * 1000);\n        });\n        return {\n            promise: timeoutPromise,\n            id: timeoutId,\n        };\n    }\n    /**\n     * @param {Object} options\n     * @param {number|undefined} options.timeoutId\n     * @param {Request} options.request\n     * @param {Array} options.logs A reference to the logs Array.\n     * @param {Event} [options.event]\n     * @return {Promise<Response>}\n     *\n     * @private\n     */\n    async _getNetworkPromise({ timeoutId, request, logs, event }) {\n        let error;\n        let response;\n        try {\n            response = await fetchWrapper.fetch({\n                request,\n                event,\n                fetchOptions: this._fetchOptions,\n                plugins: this._plugins,\n            });\n        }\n        catch (err) {\n            error = err;\n        }\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            if (response) {\n                logs.push(`Got response from network.`);\n            }\n            else {\n                logs.push(`Unable to get a response from the network. Will respond ` +\n                    `with a cached response.`);\n            }\n        }\n        if (error || !response) {\n            response = await this._respondFromCache({ request, event });\n            if (process.env.NODE_ENV !== 'production') {\n                if (response) {\n                    logs.push(`Found a cached response in the '${this._cacheName}'` +\n                        ` cache.`);\n                }\n                else {\n                    logs.push(`No response found in the '${this._cacheName}' cache.`);\n                }\n            }\n        }\n        else {\n            // Keep the service worker alive while we put the request in the cache\n            const responseClone = response.clone();\n            const cachePut = cacheWrapper.put({\n                cacheName: this._cacheName,\n                request,\n                response: responseClone,\n                event,\n                plugins: this._plugins,\n            });\n            if (event) {\n                try {\n                    // The event has been responded to so we can keep the SW alive to\n                    // respond to the request\n                    event.waitUntil(cachePut);\n                }\n                catch (err) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        logger.warn(`Unable to ensure service worker stays alive when ` +\n                            `updating cache for '${getFriendlyURL(request.url)}'.`);\n                    }\n                }\n            }\n        }\n        return response;\n    }\n    /**\n     * Used if the network timeouts or fails to make the request.\n     *\n     * @param {Object} options\n     * @param {Request} request The request to match in the cache\n     * @param {Event} [options.event]\n     * @return {Promise<Object>}\n     *\n     * @private\n     */\n    _respondFromCache({ event, request }) {\n        return cacheWrapper.match({\n            cacheName: this._cacheName,\n            request,\n            event,\n            matchOptions: this._matchOptions,\n            plugins: this._plugins,\n        });\n    }\n}\nexport { NetworkFirst };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { fetchWrapper } from 'workbox-core/_private/fetchWrapper.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a\n * [network-only]{@link https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#network-only}\n * request strategy.\n *\n * This class is useful if you want to take advantage of any\n * [Workbox plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}.\n *\n * If the network request fails, this will throw a `WorkboxError` exception.\n *\n * @memberof module:workbox-strategies\n */\nclass NetworkOnly {\n    /**\n     * @param {Object} options\n     * @param {string} options.cacheName Cache name to store and retrieve\n     * requests. Defaults to cache names provided by\n     * [workbox-core]{@link module:workbox-core.cacheNames}.\n     * @param {Array<Object>} options.plugins [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} options.fetchOptions Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of all fetch() requests made by this strategy.\n     */\n    constructor(options = {}) {\n        this._plugins = options.plugins || [];\n        this._fetchOptions = options.fetchOptions;\n    }\n    /**\n     * This method will perform a request strategy and follows an API that\n     * will work with the\n     * [Workbox Router]{@link module:workbox-routing.Router}.\n     *\n     * @param {Object} options\n     * @param {Request|string} options.request The request to run this strategy for.\n     * @param {Event} [options.event] The event that triggered the request.\n     * @return {Promise<Response>}\n     */\n    async handle({ event, request }) {\n        if (typeof request === 'string') {\n            request = new Request(request);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: 'NetworkOnly',\n                funcName: 'handle',\n                paramName: 'request',\n            });\n        }\n        let error;\n        let response;\n        try {\n            response = await fetchWrapper.fetch({\n                request,\n                event,\n                fetchOptions: this._fetchOptions,\n                plugins: this._plugins,\n            });\n        }\n        catch (err) {\n            error = err;\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart('NetworkOnly', request));\n            if (response) {\n                logger.log(`Got response from network.`);\n            }\n            else {\n                logger.log(`Unable to get a response from the network.`);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url, error });\n        }\n        return response;\n    }\n}\nexport { NetworkOnly };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { cacheWrapper } from 'workbox-core/_private/cacheWrapper.js';\nimport { fetchWrapper } from 'workbox-core/_private/fetchWrapper.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { messages } from './utils/messages.js';\nimport { cacheOkAndOpaquePlugin } from './plugins/cacheOkAndOpaquePlugin.js';\nimport './_version.js';\n/**\n * An implementation of a\n * [stale-while-revalidate]{@link https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#stale-while-revalidate}\n * request strategy.\n *\n * Resources are requested from both the cache and the network in parallel.\n * The strategy will respond with the cached version if available, otherwise\n * wait for the network response. The cache is updated with the network response\n * with each successful request.\n *\n * By default, this strategy will cache responses with a 200 status code as\n * well as [opaque responses]{@link https://developers.google.com/web/tools/workbox/guides/handle-third-party-requests}.\n * Opaque responses are cross-origin requests where the response doesn't\n * support [CORS]{@link https://enable-cors.org/}.\n *\n * If the network request fails, and there is no cache match, this will throw\n * a `WorkboxError` exception.\n *\n * @memberof module:workbox-strategies\n */\nclass StaleWhileRevalidate {\n    /**\n     * @param {Object} options\n     * @param {string} options.cacheName Cache name to store and retrieve\n     * requests. Defaults to cache names provided by\n     * [workbox-core]{@link module:workbox-core.cacheNames}.\n     * @param {Array<Object>} options.plugins [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} options.fetchOptions Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of all fetch() requests made by this strategy.\n     * @param {Object} options.matchOptions [`CacheQueryOptions`](https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions)\n     */\n    constructor(options = {}) {\n        this._cacheName = cacheNames.getRuntimeName(options.cacheName);\n        this._plugins = options.plugins || [];\n        if (options.plugins) {\n            const isUsingCacheWillUpdate = options.plugins.some((plugin) => !!plugin.cacheWillUpdate);\n            this._plugins = isUsingCacheWillUpdate ?\n                options.plugins : [cacheOkAndOpaquePlugin, ...options.plugins];\n        }\n        else {\n            // No plugins passed in, use the default plugin.\n            this._plugins = [cacheOkAndOpaquePlugin];\n        }\n        this._fetchOptions = options.fetchOptions;\n        this._matchOptions = options.matchOptions;\n    }\n    /**\n     * This method will perform a request strategy and follows an API that\n     * will work with the\n     * [Workbox Router]{@link module:workbox-routing.Router}.\n     *\n     * @param {Object} options\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {Event} [options.event] The event that triggered the request.\n     * @return {Promise<Response>}\n     */\n    async handle({ event, request }) {\n        const logs = [];\n        if (typeof request === 'string') {\n            request = new Request(request);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: 'StaleWhileRevalidate',\n                funcName: 'handle',\n                paramName: 'request',\n            });\n        }\n        const fetchAndCachePromise = this._getFromNetwork({ request, event });\n        let response = await cacheWrapper.match({\n            cacheName: this._cacheName,\n            request,\n            event,\n            matchOptions: this._matchOptions,\n            plugins: this._plugins,\n        });\n        let error;\n        if (response) {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`Found a cached response in the '${this._cacheName}'` +\n                    ` cache. Will update with the network response in the background.`);\n            }\n            if (event) {\n                try {\n                    event.waitUntil(fetchAndCachePromise);\n                }\n                catch (error) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        logger.warn(`Unable to ensure service worker stays alive when ` +\n                            `updating cache for '${getFriendlyURL(request.url)}'.`);\n                    }\n                }\n            }\n        }\n        else {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`No response found in the '${this._cacheName}' cache. ` +\n                    `Will wait for the network response.`);\n            }\n            try {\n                response = await fetchAndCachePromise;\n            }\n            catch (err) {\n                error = err;\n            }\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart('StaleWhileRevalidate', request));\n            for (const log of logs) {\n                logger.log(log);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url, error });\n        }\n        return response;\n    }\n    /**\n     * @param {Object} options\n     * @param {Request} options.request\n     * @param {Event} [options.event]\n     * @return {Promise<Response>}\n     *\n     * @private\n     */\n    async _getFromNetwork({ request, event }) {\n        const response = await fetchWrapper.fetch({\n            request,\n            event,\n            fetchOptions: this._fetchOptions,\n            plugins: this._plugins,\n        });\n        const cachePutPromise = cacheWrapper.put({\n            cacheName: this._cacheName,\n            request,\n            response: response.clone(),\n            event,\n            plugins: this._plugins,\n        });\n        if (event) {\n            try {\n                event.waitUntil(cachePutPromise);\n            }\n            catch (error) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.warn(`Unable to ensure service worker stays alive when ` +\n                        `updating cache for '${getFriendlyURL(request.url)}'.`);\n                }\n            }\n        }\n        return response;\n    }\n}\nexport { StaleWhileRevalidate };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { DBWrapper } from 'workbox-core/_private/DBWrapper.js';\nimport { deleteDatabase } from 'workbox-core/_private/deleteDatabase.js';\nimport '../_version.js';\nconst DB_NAME = 'workbox-expiration';\nconst OBJECT_STORE_NAME = 'cache-entries';\nconst normalizeURL = (unNormalizedUrl) => {\n    const url = new URL(unNormalizedUrl, location.href);\n    url.hash = '';\n    return url.href;\n};\n/**\n * Returns the timestamp model.\n *\n * @private\n */\nclass CacheTimestampsModel {\n    /**\n     *\n     * @param {string} cacheName\n     *\n     * @private\n     */\n    constructor(cacheName) {\n        this._cacheName = cacheName;\n        this._db = new DBWrapper(DB_NAME, 1, {\n            onupgradeneeded: (event) => this._handleUpgrade(event),\n        });\n    }\n    /**\n     * Should perform an upgrade of indexedDB.\n     *\n     * @param {Event} event\n     *\n     * @private\n     */\n    _handleUpgrade(event) {\n        const db = event.target.result;\n        // TODO(philipwalton): EdgeHTML doesn't support arrays as a keyPath, so we\n        // have to use the `id` keyPath here and create our own values (a\n        // concatenation of `url + cacheName`) instead of simply using\n        // `keyPath: ['url', 'cacheName']`, which is supported in other browsers.\n        const objStore = db.createObjectStore(OBJECT_STORE_NAME, { keyPath: 'id' });\n        // TODO(philipwalton): once we don't have to support EdgeHTML, we can\n        // create a single index with the keyPath `['cacheName', 'timestamp']`\n        // instead of doing both these indexes.\n        objStore.createIndex('cacheName', 'cacheName', { unique: false });\n        objStore.createIndex('timestamp', 'timestamp', { unique: false });\n        // Previous versions of `workbox-expiration` used `this._cacheName`\n        // as the IDBDatabase name.\n        deleteDatabase(this._cacheName);\n    }\n    /**\n     * @param {string} url\n     * @param {number} timestamp\n     *\n     * @private\n     */\n    async setTimestamp(url, timestamp) {\n        url = normalizeURL(url);\n        const entry = {\n            url,\n            timestamp,\n            cacheName: this._cacheName,\n            // Creating an ID from the URL and cache name won't be necessary once\n            // Edge switches to Chromium and all browsers we support work with\n            // array keyPaths.\n            id: this._getId(url),\n        };\n        await this._db.put(OBJECT_STORE_NAME, entry);\n    }\n    /**\n     * Returns the timestamp stored for a given URL.\n     *\n     * @param {string} url\n     * @return {number}\n     *\n     * @private\n     */\n    async getTimestamp(url) {\n        const entry = await this._db.get(OBJECT_STORE_NAME, this._getId(url));\n        return entry.timestamp;\n    }\n    /**\n     * Iterates through all the entries in the object store (from newest to\n     * oldest) and removes entries once either `maxCount` is reached or the\n     * entry's timestamp is less than `minTimestamp`.\n     *\n     * @param {number} minTimestamp\n     * @param {number} maxCount\n     * @return {Array<string>}\n     *\n     * @private\n     */\n    async expireEntries(minTimestamp, maxCount) {\n        const entriesToDelete = await this._db.transaction(OBJECT_STORE_NAME, 'readwrite', (txn, done) => {\n            const store = txn.objectStore(OBJECT_STORE_NAME);\n            const request = store.index('timestamp').openCursor(null, 'prev');\n            const entriesToDelete = [];\n            let entriesNotDeletedCount = 0;\n            request.onsuccess = () => {\n                const cursor = request.result;\n                if (cursor) {\n                    const result = cursor.value;\n                    // TODO(philipwalton): once we can use a multi-key index, we\n                    // won't have to check `cacheName` here.\n                    if (result.cacheName === this._cacheName) {\n                        // Delete an entry if it's older than the max age or\n                        // if we already have the max number allowed.\n                        if ((minTimestamp && result.timestamp < minTimestamp) ||\n                            (maxCount && entriesNotDeletedCount >= maxCount)) {\n                            // TODO(philipwalton): we should be able to delete the\n                            // entry right here, but doing so causes an iteration\n                            // bug in Safari stable (fixed in TP). Instead we can\n                            // store the keys of the entries to delete, and then\n                            // delete the separate transactions.\n                            // https://github.com/GoogleChrome/workbox/issues/1978\n                            // cursor.delete();\n                            // We only need to return the URL, not the whole entry.\n                            entriesToDelete.push(cursor.value);\n                        }\n                        else {\n                            entriesNotDeletedCount++;\n                        }\n                    }\n                    cursor.continue();\n                }\n                else {\n                    done(entriesToDelete);\n                }\n            };\n        });\n        // TODO(philipwalton): once the Safari bug in the following issue is fixed,\n        // we should be able to remove this loop and do the entry deletion in the\n        // cursor loop above:\n        // https://github.com/GoogleChrome/workbox/issues/1978\n        const urlsDeleted = [];\n        for (const entry of entriesToDelete) {\n            await this._db.delete(OBJECT_STORE_NAME, entry.id);\n            urlsDeleted.push(entry.url);\n        }\n        return urlsDeleted;\n    }\n    /**\n     * Takes a URL and returns an ID that will be unique in the object store.\n     *\n     * @param {string} url\n     * @return {string}\n     *\n     * @private\n     */\n    _getId(url) {\n        // Creating an ID from the URL and cache name won't be necessary once\n        // Edge switches to Chromium and all browsers we support work with\n        // array keyPaths.\n        return this._cacheName + '|' + normalizeURL(url);\n    }\n}\nexport { CacheTimestampsModel };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { dontWaitFor } from 'workbox-core/_private/dontWaitFor.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { CacheTimestampsModel } from './models/CacheTimestampsModel.js';\nimport './_version.js';\n/**\n * The `CacheExpiration` class allows you define an expiration and / or\n * limit on the number of responses stored in a\n * [`Cache`](https://developer.mozilla.org/en-US/docs/Web/API/Cache).\n *\n * @memberof module:workbox-expiration\n */\nclass CacheExpiration {\n    /**\n     * To construct a new CacheExpiration instance you must provide at least\n     * one of the `config` properties.\n     *\n     * @param {string} cacheName Name of the cache to apply restrictions to.\n     * @param {Object} config\n     * @param {number} [config.maxEntries] The maximum number of entries to cache.\n     * Entries used the least will be removed as the maximum is reached.\n     * @param {number} [config.maxAgeSeconds] The maximum age of an entry before\n     * it's treated as stale and removed.\n     */\n    constructor(cacheName, config = {}) {\n        this._isRunning = false;\n        this._rerunRequested = false;\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(cacheName, 'string', {\n                moduleName: 'workbox-expiration',\n                className: 'CacheExpiration',\n                funcName: 'constructor',\n                paramName: 'cacheName',\n            });\n            if (!(config.maxEntries || config.maxAgeSeconds)) {\n                throw new WorkboxError('max-entries-or-age-required', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                });\n            }\n            if (config.maxEntries) {\n                assert.isType(config.maxEntries, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                    paramName: 'config.maxEntries',\n                });\n                // TODO: Assert is positive\n            }\n            if (config.maxAgeSeconds) {\n                assert.isType(config.maxAgeSeconds, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                    paramName: 'config.maxAgeSeconds',\n                });\n                // TODO: Assert is positive\n            }\n        }\n        this._maxEntries = config.maxEntries;\n        this._maxAgeSeconds = config.maxAgeSeconds;\n        this._cacheName = cacheName;\n        this._timestampModel = new CacheTimestampsModel(cacheName);\n    }\n    /**\n     * Expires entries for the given cache and given criteria.\n     */\n    async expireEntries() {\n        if (this._isRunning) {\n            this._rerunRequested = true;\n            return;\n        }\n        this._isRunning = true;\n        const minTimestamp = this._maxAgeSeconds ?\n            Date.now() - (this._maxAgeSeconds * 1000) : 0;\n        const urlsExpired = await this._timestampModel.expireEntries(minTimestamp, this._maxEntries);\n        // Delete URLs from the cache\n        const cache = await self.caches.open(this._cacheName);\n        for (const url of urlsExpired) {\n            await cache.delete(url);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            if (urlsExpired.length > 0) {\n                logger.groupCollapsed(`Expired ${urlsExpired.length} ` +\n                    `${urlsExpired.length === 1 ? 'entry' : 'entries'} and removed ` +\n                    `${urlsExpired.length === 1 ? 'it' : 'them'} from the ` +\n                    `'${this._cacheName}' cache.`);\n                logger.log(`Expired the following ${urlsExpired.length === 1 ?\n                    'URL' : 'URLs'}:`);\n                urlsExpired.forEach((url) => logger.log(`    ${url}`));\n                logger.groupEnd();\n            }\n            else {\n                logger.debug(`Cache expiration ran and found no entries to remove.`);\n            }\n        }\n        this._isRunning = false;\n        if (this._rerunRequested) {\n            this._rerunRequested = false;\n            dontWaitFor(this.expireEntries());\n        }\n    }\n    /**\n     * Update the timestamp for the given URL. This ensures the when\n     * removing entries based on maximum entries, most recently used\n     * is accurate or when expiring, the timestamp is up-to-date.\n     *\n     * @param {string} url\n     */\n    async updateTimestamp(url) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(url, 'string', {\n                moduleName: 'workbox-expiration',\n                className: 'CacheExpiration',\n                funcName: 'updateTimestamp',\n                paramName: 'url',\n            });\n        }\n        await this._timestampModel.setTimestamp(url, Date.now());\n    }\n    /**\n     * Can be used to check if a URL has expired or not before it's used.\n     *\n     * This requires a look up from IndexedDB, so can be slow.\n     *\n     * Note: This method will not remove the cached entry, call\n     * `expireEntries()` to remove indexedDB and Cache entries.\n     *\n     * @param {string} url\n     * @return {boolean}\n     */\n    async isURLExpired(url) {\n        if (!this._maxAgeSeconds) {\n            if (process.env.NODE_ENV !== 'production') {\n                throw new WorkboxError(`expired-test-without-max-age`, {\n                    methodName: 'isURLExpired',\n                    paramName: 'maxAgeSeconds',\n                });\n            }\n            return false;\n        }\n        else {\n            const timestamp = await this._timestampModel.getTimestamp(url);\n            const expireOlderThan = Date.now() - (this._maxAgeSeconds * 1000);\n            return (timestamp < expireOlderThan);\n        }\n    }\n    /**\n     * Removes the IndexedDB object store used to keep track of cache expiration\n     * metadata.\n     */\n    async delete() {\n        // Make sure we don't attempt another rerun if we're called in the middle of\n        // a cache expiration.\n        this._rerunRequested = false;\n        await this._timestampModel.expireEntries(Infinity); // Expires all.\n    }\n}\nexport { CacheExpiration };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { dontWaitFor } from 'workbox-core/_private/dontWaitFor.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { registerQuotaErrorCallback } from 'workbox-core/registerQuotaErrorCallback.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { CacheExpiration } from './CacheExpiration.js';\nimport './_version.js';\n/**\n * This plugin can be used in the Workbox APIs to regularly enforce a\n * limit on the age and / or the number of cached requests.\n *\n * Whenever a cached request is used or updated, this plugin will look\n * at the used Cache and remove any old or extra requests.\n *\n * When using `maxAgeSeconds`, requests may be used *once* after expiring\n * because the expiration clean up will not have occurred until *after* the\n * cached request has been used. If the request has a \"Date\" header, then\n * a light weight expiration check is performed and the request will not be\n * used immediately.\n *\n * When using `maxEntries`, the entry least-recently requested will be removed\n * from the cache first.\n *\n * @memberof module:workbox-expiration\n */\nclass ExpirationPlugin {\n    /**\n     * @param {Object} config\n     * @param {number} [config.maxEntries] The maximum number of entries to cache.\n     * Entries used the least will be removed as the maximum is reached.\n     * @param {number} [config.maxAgeSeconds] The maximum age of an entry before\n     * it's treated as stale and removed.\n     * @param {boolean} [config.purgeOnQuotaError] Whether to opt this cache in to\n     * automatic deletion if the available storage quota has been exceeded.\n     */\n    constructor(config = {}) {\n        /**\n         * A \"lifecycle\" callback that will be triggered automatically by the\n         * `workbox-strategies` handlers when a `Response` is about to be returned\n         * from a [Cache](https://developer.mozilla.org/en-US/docs/Web/API/Cache) to\n         * the handler. It allows the `Response` to be inspected for freshness and\n         * prevents it from being used if the `Response`'s `Date` header value is\n         * older than the configured `maxAgeSeconds`.\n         *\n         * @param {Object} options\n         * @param {string} options.cacheName Name of the cache the response is in.\n         * @param {Response} options.cachedResponse The `Response` object that's been\n         *     read from a cache and whose freshness should be checked.\n         * @return {Response} Either the `cachedResponse`, if it's\n         *     fresh, or `null` if the `Response` is older than `maxAgeSeconds`.\n         *\n         * @private\n         */\n        this.cachedResponseWillBeUsed = async ({ event, request, cacheName, cachedResponse }) => {\n            if (!cachedResponse) {\n                return null;\n            }\n            const isFresh = this._isResponseDateFresh(cachedResponse);\n            // Expire entries to ensure that even if the expiration date has\n            // expired, it'll only be used once.\n            const cacheExpiration = this._getCacheExpiration(cacheName);\n            dontWaitFor(cacheExpiration.expireEntries());\n            // Update the metadata for the request URL to the current timestamp,\n            // but don't `await` it as we don't want to block the response.\n            const updateTimestampDone = cacheExpiration.updateTimestamp(request.url);\n            if (event) {\n                try {\n                    event.waitUntil(updateTimestampDone);\n                }\n                catch (error) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // The event may not be a fetch event; only log the URL if it is.\n                        if ('request' in event) {\n                            logger.warn(`Unable to ensure service worker stays alive when ` +\n                                `updating cache entry for ` +\n                                `'${getFriendlyURL(event.request.url)}'.`);\n                        }\n                    }\n                }\n            }\n            return isFresh ? cachedResponse : null;\n        };\n        /**\n         * A \"lifecycle\" callback that will be triggered automatically by the\n         * `workbox-strategies` handlers when an entry is added to a cache.\n         *\n         * @param {Object} options\n         * @param {string} options.cacheName Name of the cache that was updated.\n         * @param {string} options.request The Request for the cached entry.\n         *\n         * @private\n         */\n        this.cacheDidUpdate = async ({ cacheName, request }) => {\n            if (process.env.NODE_ENV !== 'production') {\n                assert.isType(cacheName, 'string', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'cacheDidUpdate',\n                    paramName: 'cacheName',\n                });\n                assert.isInstance(request, Request, {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'cacheDidUpdate',\n                    paramName: 'request',\n                });\n            }\n            const cacheExpiration = this._getCacheExpiration(cacheName);\n            await cacheExpiration.updateTimestamp(request.url);\n            await cacheExpiration.expireEntries();\n        };\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(config.maxEntries || config.maxAgeSeconds)) {\n                throw new WorkboxError('max-entries-or-age-required', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                });\n            }\n            if (config.maxEntries) {\n                assert.isType(config.maxEntries, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                    paramName: 'config.maxEntries',\n                });\n            }\n            if (config.maxAgeSeconds) {\n                assert.isType(config.maxAgeSeconds, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                    paramName: 'config.maxAgeSeconds',\n                });\n            }\n        }\n        this._config = config;\n        this._maxAgeSeconds = config.maxAgeSeconds;\n        this._cacheExpirations = new Map();\n        if (config.purgeOnQuotaError) {\n            registerQuotaErrorCallback(() => this.deleteCacheAndMetadata());\n        }\n    }\n    /**\n     * A simple helper method to return a CacheExpiration instance for a given\n     * cache name.\n     *\n     * @param {string} cacheName\n     * @return {CacheExpiration}\n     *\n     * @private\n     */\n    _getCacheExpiration(cacheName) {\n        if (cacheName === cacheNames.getRuntimeName()) {\n            throw new WorkboxError('expire-custom-caches-only');\n        }\n        let cacheExpiration = this._cacheExpirations.get(cacheName);\n        if (!cacheExpiration) {\n            cacheExpiration = new CacheExpiration(cacheName, this._config);\n            this._cacheExpirations.set(cacheName, cacheExpiration);\n        }\n        return cacheExpiration;\n    }\n    /**\n     * @param {Response} cachedResponse\n     * @return {boolean}\n     *\n     * @private\n     */\n    _isResponseDateFresh(cachedResponse) {\n        if (!this._maxAgeSeconds) {\n            // We aren't expiring by age, so return true, it's fresh\n            return true;\n        }\n        // Check if the 'date' header will suffice a quick expiration check.\n        // See https://github.com/GoogleChromeLabs/sw-toolbox/issues/164 for\n        // discussion.\n        const dateHeaderTimestamp = this._getDateHeaderTimestamp(cachedResponse);\n        if (dateHeaderTimestamp === null) {\n            // Unable to parse date, so assume it's fresh.\n            return true;\n        }\n        // If we have a valid headerTime, then our response is fresh iff the\n        // headerTime plus maxAgeSeconds is greater than the current time.\n        const now = Date.now();\n        return dateHeaderTimestamp >= now - (this._maxAgeSeconds * 1000);\n    }\n    /**\n     * This method will extract the data header and parse it into a useful\n     * value.\n     *\n     * @param {Response} cachedResponse\n     * @return {number|null}\n     *\n     * @private\n     */\n    _getDateHeaderTimestamp(cachedResponse) {\n        if (!cachedResponse.headers.has('date')) {\n            return null;\n        }\n        const dateHeader = cachedResponse.headers.get('date');\n        const parsedDate = new Date(dateHeader);\n        const headerTime = parsedDate.getTime();\n        // If the Date header was invalid for some reason, parsedDate.getTime()\n        // will return NaN.\n        if (isNaN(headerTime)) {\n            return null;\n        }\n        return headerTime;\n    }\n    /**\n     * This is a helper method that performs two operations:\n     *\n     * - Deletes *all* the underlying Cache instances associated with this plugin\n     * instance, by calling caches.delete() on your behalf.\n     * - Deletes the metadata from IndexedDB used to keep track of expiration\n     * details for each Cache instance.\n     *\n     * When using cache expiration, calling this method is preferable to calling\n     * `caches.delete()` directly, since this will ensure that the IndexedDB\n     * metadata is also cleanly removed and open IndexedDB instances are deleted.\n     *\n     * Note that if you're *not* using cache expiration for a given cache, calling\n     * `caches.delete()` and passing in the cache's name should be sufficient.\n     * There is no Workbox-specific method needed for cleanup in that case.\n     */\n    async deleteCacheAndMetadata() {\n        // Do this one at a time instead of all at once via `Promise.all()` to\n        // reduce the chance of inconsistency if a promise rejects.\n        for (const [cacheName, cacheExpiration] of this._cacheExpirations) {\n            await self.caches.delete(cacheName);\n            await cacheExpiration.delete();\n        }\n        // Reset this._cacheExpirations to its initial state.\n        this._cacheExpirations = new Map();\n    }\n}\nexport { ExpirationPlugin };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport './_version.js';\n/**\n * This class allows you to set up rules determining what\n * status codes and/or headers need to be present in order for a\n * [`Response`](https://developer.mozilla.org/en-US/docs/Web/API/Response)\n * to be considered cacheable.\n *\n * @memberof module:workbox-cacheable-response\n */\nclass CacheableResponse {\n    /**\n     * To construct a new CacheableResponse instance you must provide at least\n     * one of the `config` properties.\n     *\n     * If both `statuses` and `headers` are specified, then both conditions must\n     * be met for the `Response` to be considered cacheable.\n     *\n     * @param {Object} config\n     * @param {Array<number>} [config.statuses] One or more status codes that a\n     * `Response` can have and be considered cacheable.\n     * @param {Object<string,string>} [config.headers] A mapping of header names\n     * and expected values that a `Response` can have and be considered cacheable.\n     * If multiple headers are provided, only one needs to be present.\n     */\n    constructor(config = {}) {\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(config.statuses || config.headers)) {\n                throw new WorkboxError('statuses-or-headers-required', {\n                    moduleName: 'workbox-cacheable-response',\n                    className: 'CacheableResponse',\n                    funcName: 'constructor',\n                });\n            }\n            if (config.statuses) {\n                assert.isArray(config.statuses, {\n                    moduleName: 'workbox-cacheable-response',\n                    className: 'CacheableResponse',\n                    funcName: 'constructor',\n                    paramName: 'config.statuses',\n                });\n            }\n            if (config.headers) {\n                assert.isType(config.headers, 'object', {\n                    moduleName: 'workbox-cacheable-response',\n                    className: 'CacheableResponse',\n                    funcName: 'constructor',\n                    paramName: 'config.headers',\n                });\n            }\n        }\n        this._statuses = config.statuses;\n        this._headers = config.headers;\n    }\n    /**\n     * Checks a response to see whether it's cacheable or not, based on this\n     * object's configuration.\n     *\n     * @param {Response} response The response whose cacheability is being\n     * checked.\n     * @return {boolean} `true` if the `Response` is cacheable, and `false`\n     * otherwise.\n     */\n    isResponseCacheable(response) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(response, Response, {\n                moduleName: 'workbox-cacheable-response',\n                className: 'CacheableResponse',\n                funcName: 'isResponseCacheable',\n                paramName: 'response',\n            });\n        }\n        let cacheable = true;\n        if (this._statuses) {\n            cacheable = this._statuses.includes(response.status);\n        }\n        if (this._headers && cacheable) {\n            cacheable = Object.keys(this._headers).some((headerName) => {\n                return response.headers.get(headerName) === this._headers[headerName];\n            });\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            if (!cacheable) {\n                logger.groupCollapsed(`The request for ` +\n                    `'${getFriendlyURL(response.url)}' returned a response that does ` +\n                    `not meet the criteria for being cached.`);\n                logger.groupCollapsed(`View cacheability criteria here.`);\n                logger.log(`Cacheable statuses: ` +\n                    JSON.stringify(this._statuses));\n                logger.log(`Cacheable headers: ` +\n                    JSON.stringify(this._headers, null, 2));\n                logger.groupEnd();\n                const logFriendlyHeaders = {};\n                response.headers.forEach((value, key) => {\n                    logFriendlyHeaders[key] = value;\n                });\n                logger.groupCollapsed(`View response status and headers here.`);\n                logger.log(`Response status: ` + response.status);\n                logger.log(`Response headers: ` +\n                    JSON.stringify(logFriendlyHeaders, null, 2));\n                logger.groupEnd();\n                logger.groupCollapsed(`View full response details here.`);\n                logger.log(response.headers);\n                logger.log(response);\n                logger.groupEnd();\n                logger.groupEnd();\n            }\n        }\n        return cacheable;\n    }\n}\nexport { CacheableResponse };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { CacheableResponse } from './CacheableResponse.js';\nimport './_version.js';\n/**\n * A class implementing the `cacheWillUpdate` lifecycle callback. This makes it\n * easier to add in cacheability checks to requests made via Workbox's built-in\n * strategies.\n *\n * @memberof module:workbox-cacheable-response\n */\nclass CacheableResponsePlugin {\n    /**\n     * To construct a new CacheableResponsePlugin instance you must provide at\n     * least one of the `config` properties.\n     *\n     * If both `statuses` and `headers` are specified, then both conditions must\n     * be met for the `Response` to be considered cacheable.\n     *\n     * @param {Object} config\n     * @param {Array<number>} [config.statuses] One or more status codes that a\n     * `Response` can have and be considered cacheable.\n     * @param {Object<string,string>} [config.headers] A mapping of header names\n     * and expected values that a `Response` can have and be considered cacheable.\n     * If multiple headers are provided, only one needs to be present.\n     */\n    constructor(config) {\n        /**\n         * @param {Object} options\n         * @param {Response} options.response\n         * @return {Response|null}\n         * @private\n         */\n        this.cacheWillUpdate = async ({ response }) => {\n            if (this._cacheableResponse.isResponseCacheable(response)) {\n                return response;\n            }\n            return null;\n        };\n        this._cacheableResponse = new CacheableResponse(config);\n    }\n}\nexport { CacheableResponsePlugin };\n"]}